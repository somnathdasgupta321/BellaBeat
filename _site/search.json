[
  {
    "objectID": "Bellabeat.html",
    "href": "Bellabeat.html",
    "title": "Case Study on Bellabeat",
    "section": "",
    "text": "Hello everyone, it’s been a few months since I’ve been working on the Google Data Analytics Professional Certificate through Coursera. Throughout this journey I’ve accumulated lots of interesting, insightful and most importantly, useful information about various tools that were included with the bundle, such as Tableau, R programming, SQL, Spreadsheets.\n\n\nThis curriculum not only exposed me to diverse standardized practices, but also equipped me with a universal framework that I could apply to any project. Moreover, I gained valuable knowledge of key data analyst terminologies and processes. Through the completion of a case study included in the course, I was able to further enhance my skills and understanding by utilizing a variety of tools, methods, and strategies. Further, I will provide a brief walk through of my thought process and overall comprehension that I have developed over time through this case study."
  },
  {
    "objectID": "Bellabeat.html#background-information",
    "href": "Bellabeat.html#background-information",
    "title": "Case Study on Bellabeat",
    "section": "2 BACKGROUND INFORMATION",
    "text": "2 BACKGROUND INFORMATION\n\nBellabeat is a high-tech manufacturer that manufactures health-focused smart products for women.They develop uniquely beautifully designed technology that informs and inspires women around the world. Their app and multiple smart devices are the source point to collect various data on activity, sleep, stress, hydration levels, and reproductive health to empower women with an understanding of their own health and habits.\n\n\nBellabeat was founded in 2013 by Urška Sršen and Sando Mur and since then it has grown rapidly and quickly positioned itself as a tech-driven wellness company for women.It took them three years to open multiple offices around the world and launch various products.They increased their product’s availability through a growing number of online retailers in addition to their own e - commerce channel on their website.\n\n\nBellabeat offers a range of products that promote wellness and a healthy lifestyle, all of which connect to the Bellabeat app.There are different product lines available, but one of their popular products is the Leaf, a wellness tracker that can be worn as a bracelet, necklace, or clip. It tracks the user’s activity, sleep, and stress levels and syncs with the Bellabeat app.Apart from their products, they also offer a subscription-based membership program that provides personalized guidance on nutrition, activity, sleep, health, beauty, and mindfulness, based on users’ lifestyles and goals, with 24/7 access."
  },
  {
    "objectID": "Bellabeat.html#data-limitations",
    "href": "Bellabeat.html#data-limitations",
    "title": "Case Study on Bellabeat",
    "section": "3 DATA LIMITATIONS",
    "text": "3 DATA LIMITATIONS\n\nWe have identified several limitations in the datasets. First and foremost, the data is not comprehensive, as it includes inputs from only 33 unique users. Of these 33 users, only 8 entered weight, 12 entered heart rate, and 24 entered sleep data. Furthermore, some users did not provide information for all variables in the weight dataset, making the data incomplete. Despite these limitations, we will still work with these datasets as they contain important variables.\n\n\nIt’s important to note that the data comes from FitBit users, which is a secondary source, and therefore may not accurately reflect the behavior and data distribution of BellaBeat users, potentially leading to inaccurate insights.Another limitation is that the data is not current, as it was collected between 4/12/2016 to 5/12/2016, which was about 5 years prior to the time of this case study.The limited duration of data collection, only 30 days, and the small number of users, 33, also affect the reliability and may have resulted in a biased dataset.Some users may not have entered information, while others may have turned off their devices or not used them regularly. Additionally, some data was manually entered, such as weight information, which introduces potential errors.\n\n\nIf this were a real-life project intended to define BellaBeat’s marketing strategy, these limitations would need to be addressed before proceeding with the analysis. However, as this is a case study and we cannot control these limitations, we will still proceed with the analysis.In a real-world scenario, a data analyst would ask several questions before proceeding with data cleaning, such as why some users generated more data rows than others, whether users contributed data voluntarily or were told how often to use the app, and what measures were taken to eliminate sampling bias. It would also be beneficial to obtain newer versions of these datasets or similar datasets directly from BellaBeat for comparison and originality."
  },
  {
    "objectID": "Bellabeat.html#ask-phase",
    "href": "Bellabeat.html#ask-phase",
    "title": "Case Study on Bellabeat",
    "section": "4 ASK PHASE:",
    "text": "4 ASK PHASE:\n\nSome of the determining questions asked which will significantly guide the direction for the future marketing program:\n\n\n\nDo you have any specific recommendations for any selective domain or devices that you consider essential to focus on while recommending a marketing strategy?\nWhat kinds of targets or expectations have you set for this analysis? Do you mind giving a concise brief?\nAre you willing to pivot your business strategy if this analysis reveals insights that could help you expand your customer base and improve the customer experience apart from high level recommendation for marketing strategy?\nCan you identify any products that did not receive the desired response, as compared to stakeholders expectations? If so, could you provide a short brief of what you think went wrong?\nWhat will be the use case for recommending a high-level marketing strategy? Is it to enhance your current services or products, or perhaps to launch a new product or service offering?\n\n\n\n4.1 Key Takeways\n\n\nIdentify business task.\n\n\nThe main purpose of this analysis is to recommend a high-level marketing strategy and provide insights, which will enable the executive team to gain a clear landscape of the current state and identify untapped opportunities for growth.\nThe analysis of any one product can result in either minor or significant changes to that product or the creation of a new product that enhances the overall female customers experience as well as, can increase retention rates.\n\n\nConsider Key Stakeholders.\n\n\nUrška Sršen(Bellabeat’s cofounder and Chief Creative Officer).\nSando Mur(Mathematician and Bellabeat’s cofounder)\nMarketing Analytics Team.\n\n\n\n\n4.2 Deliverables\n\n\nOur goal is to ascertain growth opportunities for any specific products or services, as well as unlock the full potential of female customers who avail themselves of these offerings.\nThe aim is to spot all determining factors which are hindering female customers from achieving a balanced lifestyle through use of the app and also undermining possibilities for improving the app’s services to a superior standard."
  },
  {
    "objectID": "Bellabeat.html#prepare-phase",
    "href": "Bellabeat.html#prepare-phase",
    "title": "Case Study on Bellabeat",
    "section": "5 PREPARE PHASE:",
    "text": "5 PREPARE PHASE:\n\nIn this analysis, I will be using datasets to identify every pattern and style in how female users are utilizing the availed services or products. This analysis can also help broadcast areas where the product or service may need improvement or where the marketing strategies can be optimized to better cater to the needs and preferences of female users.The data is made available using public domain by Mobius page.\n\n\n5.1 Key Task\n\n\nLoad the datasets in a particular order to ensure they are in consecutive order.\nDownloading the datasets from a given online repository and then save them in a separate folder as raw data.\nDetermining the file format and ensuring if lists of docs are accessible,as well as both readable and writable.\nExamining the credibility of data by inspecting for any vague or unwanted rows in each of the datasets and then sort them accordingly.\nChecking if the total number of id’s are same for each dataset so as to identify any discrepancies and inconsistencies within the dataset.\n\n\n\n\n5.2 Deliverables\n\n\nDocumenting the entire procedure step by step involved in this phase.\nA short brief on each operation performed for clarity and ease of understanding.\n\n\n\n5.3 Code Chunk\n\nLet’s load the libraries:\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(janitor)\nlibrary(hms)\nlibrary(geosphere)\nlibrary(spatialrisk)\nlibrary(distances)\nlibrary(Distance)\nlibrary(measurements)\nlibrary(plotrix)\nlibrary(lubridate)\nlibrary(ggalt)\nlibrary(hrbrthemes)\nlibrary(viridis)\nlibrary(ggridges)\nlibrary(scales)\nlibrary(readxl)\nlibrary(writexl)\nlibrary(ggiraph)\nlibrary(viridisLite)\nlibrary(labeling)\nlibrary(farver)\nlibrary(psych)\nlibrary(plotly)\nlibrary(GGally)\nlibrary(ggiraphExtra)\nlibrary(ggcorrplot)\n\n\n\nImporting all Datsets.\n\n\n\nCode\ndaily_activity <- read_csv(\"dailyActivity_merged.csv\")\ndaily_calories <- read_csv(\"dailyCalories_merged.csv\")\ndaily_Intensities <- read_csv(\"dailyIntensities_merged.csv\")\ndaily_steps <- read_csv(\"dailySteps_merged.csv\")\nheartrate_seconds <- read_csv(\"heartrate_seconds_merged.csv\")\nhourly_calories <- read_csv(\"hourlyCalories_merged.csv\")\nhourly_intensities <- read_csv(\"hourlyIntensities_merged.csv\")\nhourly_steps <- read_csv(\"hourlySteps_merged.csv\")\nminute_calories_narrow <- read_csv(\"minuteCaloriesNarrow_merged.csv\")\nminute_calories_wide <- read_csv(\"minuteCaloriesWide_merged.csv\")\nminute_intensities_narrow <- read_csv(\"minuteIntensitiesNarrow_merged.csv\")\nminute_intensities_wide <- read_csv(\"minuteIntensitiesWide_merged.csv\")\nminute_METs_narrow <- read_csv(\"minuteMETsNarrow_merged.csv\")\nminute_sleep <- read_csv(\"minuteSleep_merged.csv\")\nminute_steps_narrow <- read_csv(\"minuteStepsNarrow_merged.csv\")\nminute_steps_wide <- read_csv(\"minuteStepsWide_merged.csv\")\nsleep_day <- read_csv(\"sleepDay_merged.csv\")\nweight_log_info <- read_csv(\"weightLogInfo_merged.csv\")\n\n\n\nChecking for distinctive user id in order to know exact number of users in a dataset.\n\n\nFor daily_steps dataset.\n\n\n\nCode\nn_distinct(daily_steps$Id)\n\n\n[1] 33\n\n\n\nFor daily_calories dataset.\n\n\n\nCode\nn_distinct(daily_calories$Id)\n\n\n[1] 33\n\n\n\nFor daily_intensities dataset.\n\n\n\nCode\nn_distinct(daily_Intensities$Id)\n\n\n[1] 33\n\n\n\nFor daily_activities dataset.\n\n\n\nCode\nn_distinct(daily_Intensities$Id)\n\n\n[1] 33\n\n\n\nFor sleep_day dataset.\n\n\n\nCode\nn_distinct(sleep_day$Id)\n\n\n[1] 24"
  },
  {
    "objectID": "Bellabeat.html#process-phase",
    "href": "Bellabeat.html#process-phase",
    "title": "Case Study on Bellabeat",
    "section": "6 PROCESS PHASE:",
    "text": "6 PROCESS PHASE:\n\nCleaning and processing of the gathered datasets is necessary to determine the quality of associated characteristics and to proceed with further analysis.\n\n\n6.1 Key Task\n\n\nExamine across datasets for errors or missing values.\nEradicating duplicates and outliers from datasets if any.\nSelecting the appropriate tool to perform the required analysis.\nStoring a backup of original datasets to refer back to in case any essential data is lost during analysis.\nTransform the existing dataset into a workable format to perform the desired analysis.\n\n\n\n\n6.2 Deliverables\n\n\nAdministering some crucial changes within datasets such as converting datatype to get desired one and using functions for calculating values.\nManipulating datasets by performing some critical computations as required.\nStating use case for all the changes made within datasets along with detailed summary of all datasets.\nRecording statement for every minor to major changes made across datasets.\n\n\n\n\n6.3 Code Chunk\n\nSplitting date and time in two different columns.\n\n\nHere parsing a character string into date and time using mdy_hms().\n\n\n\nCode\nheartrate_seconds$date1 <- mdy_hms(heartrate_seconds$Time)\nhourly_calories$date1 <- mdy_hms(hourly_calories$ActivityHour)\nhourly_intensities$date1 <- mdy_hms(hourly_intensities$ActivityHour)\nhourly_steps$date1 <- mdy_hms(hourly_steps$ActivityHour)\nminute_calories_narrow$date1 <- mdy_hms(minute_calories_narrow$ActivityMinute)\nminute_calories_wide$date1 <- mdy_hms(minute_calories_wide$ActivityHour)\nminute_intensities_wide$date1 <- mdy_hms(minute_intensities_wide$ActivityHour)\nminute_intensities_narrow$date1 <- mdy_hms(minute_intensities_narrow$ActivityMinute)\nminute_METs_narrow$date1 <- mdy_hms(minute_METs_narrow$ActivityMinute)\nminute_sleep$date1 <- mdy_hms(minute_sleep$date)\nminute_steps_narrow$date1 <- mdy_hms(minute_steps_narrow$ActivityMinute)\nminute_steps_wide$date1 <- mdy_hms(minute_steps_wide$ActivityHour)\nsleep_day$date1 <- mdy_hms(sleep_day$SleepDay)\nweight_log_info$date1 <- mdy_hms(weight_log_info$Date)\n\n\n\nConverting and extracting date from date and time column using as.date().\n\n\n\nCode\ndaily_activity$ActivityDate <- as.Date(daily_activity$ActivityDate, format = \"%m/%d/%Y\")\ndaily_calories$ActivityDay <- as.Date(daily_calories$ActivityDay,format = \"%m/%d/%Y\")\ndaily_Intensities$ActivityDay <- as.Date(daily_Intensities$ActivityDay,format = \"%m/%d/%Y\")\ndaily_steps$ActivityDay <- as.Date(daily_steps$ActivityDay,format = \"%m/%d/%Y\")\nheartrate_seconds$Date <- as.Date(heartrate_seconds$date1)\nhourly_calories$Date <- as.Date(hourly_calories$date1)\nhourly_intensities$Date <- as.Date(hourly_intensities$date1)\nhourly_steps$Date <- as.Date(hourly_steps$date1)\nminute_calories_narrow$Date <- as.Date(minute_calories_narrow$date1)\nminute_calories_wide$Date <- as.Date(minute_calories_wide$date1)\nminute_intensities_wide$Date <- as.Date(minute_intensities_wide$date1)\nminute_intensities_narrow$Date <- as.Date(minute_intensities_narrow$date1)\nminute_METs_narrow$Date <- as.Date(minute_METs_narrow$date1)\nminute_sleep$Date <- as.Date(minute_sleep$date1)\nminute_steps_narrow$Date <- as.Date(minute_steps_narrow$date1)\nminute_steps_wide$Date <- as.Date(minute_steps_wide$date1)\nsleep_day$Date <- as.Date(sleep_day$date1)\nweight_log_info$Date <- as.Date(weight_log_info$date1)\n\n\n\nConverting and extracting time from date and time column using as_hms().\n\n\n\nCode\nheartrate_seconds$Time <- as_hms(heartrate_seconds$date1)\nhourly_calories$Time <- as_hms(hourly_calories$date1)\nhourly_intensities$Time <- as_hms(hourly_intensities$date1)\nhourly_steps$Time <- as_hms(hourly_steps$date1)\nminute_calories_narrow$Time <- as_hms(minute_calories_narrow$date1)\nminute_calories_wide$Time <- as_hms(minute_calories_wide$date1)\nminute_intensities_wide$Time <- as_hms(minute_intensities_wide$date1)\nminute_intensities_narrow$Time <- as_hms(minute_intensities_narrow$date1)\nminute_METs_narrow$Time <- as_hms(minute_METs_narrow$date1)\nminute_sleep$Time <- as_hms(minute_sleep$date1)\nminute_steps_narrow$Time <- as_hms(minute_steps_narrow$date1)\nminute_steps_wide$Time <- as_hms(minute_steps_wide$date1)\nsleep_day$Time <- as_hms(sleep_day$date1)\nweight_log_info$Time <- as_hms(weight_log_info$date1)\n\n\n\nRemoving Columns from a dataset.\n\n\n\nCode\nheartrate_seconds$date1 <- NULL\nhourly_calories$date1 <- NULL\nhourly_calories$ActivityHour <- NULL\nhourly_intensities$date1 <- NULL\nhourly_intensities$ActivityHour <- NULL\nhourly_steps$date1 <- NULL\nhourly_steps$ActivityHour <- NULL\nminute_calories_narrow$date1 <- NULL\nminute_calories_narrow$ActivityMinute <- NULL\nminute_calories_wide$date1 <- NULL\nminute_calories_wide$ActivityHour <- NULL\nminute_intensities_wide$date1 <- NULL\nminute_intensities_wide$ActivityHour <- NULL\nminute_intensities_narrow$date1 <- NULL\nminute_intensities_narrow$ActivityMinute <- NULL\nminute_METs_narrow$date1 <- NULL\nminute_METs_narrow$ActivityMinute <- NULL\nminute_sleep$date1 <- NULL\nminute_sleep$date <- NULL\nminute_steps_narrow$date1 <- NULL\nminute_steps_narrow$ActivityMinute <- NULL\nminute_steps_wide$date1 <- NULL\nminute_steps_wide$ActivityHour <- NULL\nsleep_day$date1 <- NULL\nsleep_day$SleepDay <- NULL\nweight_log_info$date1 <- NULL\n\n\n\nExtracting months from dates in datasets using format () and “%B” which reperesent month name in characters.\n\n\n\nCode\ndaily_activity$Month <- format(daily_activity$ActivityDate, \"%B\")\ndaily_calories$Month <- format(daily_calories$ActivityDay, \"%B\")\ndaily_Intensities$Month <- format(daily_Intensities$ActivityDay, \"%B\")\ndaily_steps$Month <- format(daily_steps$ActivityDay, \"%B\")\nheartrate_seconds$Month <- format(heartrate_seconds$Date,\"%B\")\nhourly_calories$Month  <- format(hourly_calories$Date, \"%B\")\nhourly_intensities$Month  <- format(hourly_intensities$Date,\"%B\")\nhourly_steps$Month  <- format(hourly_steps$Date,\"%B\")\nminute_calories_narrow$Month <- format(minute_calories_narrow$Date,\"%B\")\nminute_calories_wide$Month <- format(minute_calories_wide$Date,\"%B\")\nminute_intensities_wide$Month <- format(minute_intensities_wide$Date,\"%B\")\nminute_intensities_narrow$Month <- format(minute_intensities_narrow$Date,\"%B\")\nminute_METs_narrow$Month <- format(minute_METs_narrow$Date,\"%B\")\nminute_sleep$Month <- format(minute_sleep$Date,\"%B\")\nminute_steps_narrow$Month <- format(minute_steps_narrow$Date,\"%B\")\nminute_steps_wide$Month <- format(minute_steps_wide$Date,\"%B\")\nsleep_day$Month <- format(sleep_day$Date,\"%B\")\nweight_log_info$Month <- format(weight_log_info$Date,\"%B\") \n\n\n\nGetting weekdays from date columns of every datasets using weekdays().\n\n\n\nCode\ndaily_activity$WeekDay <- weekdays(daily_activity$ActivityDate)\ndaily_calories$WeekDay <- weekdays(daily_calories$ActivityDay)\ndaily_Intensities$WeekDay <- weekdays(daily_Intensities$ActivityDay)\ndaily_steps$WeekDay <- weekdays(daily_steps$ActivityDay)\nheartrate_seconds$WeekDay <- weekdays(heartrate_seconds$Date)\nhourly_calories$WeekDay   <- weekdays(hourly_calories$Date)\nhourly_intensities$WeekDay   <- weekdays(hourly_intensities$Date)\nhourly_steps$WeekDay  <- weekdays(hourly_steps$Date)\nminute_calories_narrow$WeekDay  <- weekdays(minute_calories_narrow$Date)\nminute_calories_wide$WeekDay  <- weekdays(minute_calories_wide$Date)\nminute_intensities_wide$WeekDay  <- weekdays(minute_intensities_wide$Date)\nminute_intensities_WeekDay <- weekdays(minute_METs_narrow$Date)\nminute_sleep$WeekDay <- weekdays(minute_sleep$Date)\nminute_steps_narrow$WeekDay  <- weekdays(minute_steps_narrow$Date)\nminute_steps_wide$WeekDay  <- weekdays(minute_steps_wide$Date)\nsleep_day$WeekDay  <- weekdays(sleep_day$Date)\nweight_log_info$WeekDay  <- weekdays(weight_log_info$Date) \n\n\n\nCreating breaks and labels to convert time into time of the day.\n\n\nCreating breaks.\n\n\n\nCode\nbreaks <- hour(hm(\"00:00\", \"6:00\", \"12:00\", \"18:00\", \"23:59\"))\n\n\n\nCreating labels for breaks.\n\n\n\nCode\nlabels <- c(\"Night\", \"Morning\", \"Afternoon\", \"Evening\")\n\n\n\nConverting time into time of the day for various datasets.\n\n\n\nCode\nheartrate_seconds$Time_of_day <- cut(x=hour(heartrate_seconds$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nhourly_calories$Time_of_day <- cut(x=hour(hourly_calories$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nhourly_intensities$Time_of_day <- cut(x=hour(hourly_intensities$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nhourly_steps$Time_of_day <- cut(x=hour(hourly_steps$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nweight_log_info$Time_of_day <- cut(x=hour(weight_log_info$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nminute_intensities_wide$Time_of_day <- cut(x=hour(minute_intensities_wide$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nminute_METs_narrow$Time_of_day <- cut(x=hour(minute_METs_narrow$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nminute_sleep$Time_of_day <- cut(x=hour(minute_sleep$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nminute_steps_wide$Time_of_day <- cut(x=hour(minute_steps_wide$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\nminute_steps_narrow$Time_of_day <- cut(x=hour(minute_steps_narrow$Time),breaks = breaks,labels = labels,include.lowest = TRUE)\n\n\n\nUsing str() function to get the detailed data formatting structure of the data frame which includes all rows and columns.\n\n\n\nCode\nstr(daily_activity)\n\n\nspc_tbl_ [940 × 17] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Id                      : num [1:940] 1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...\n $ ActivityDate            : Date[1:940], format: \"2016-04-12\" \"2016-04-13\" ...\n $ TotalSteps              : num [1:940] 13162 10735 10460 9762 12669 ...\n $ TotalDistance           : num [1:940] 8.5 6.97 6.74 6.28 8.16 ...\n $ TrackerDistance         : num [1:940] 8.5 6.97 6.74 6.28 8.16 ...\n $ LoggedActivitiesDistance: num [1:940] 0 0 0 0 0 0 0 0 0 0 ...\n $ VeryActiveDistance      : num [1:940] 1.88 1.57 2.44 2.14 2.71 ...\n $ ModeratelyActiveDistance: num [1:940] 0.55 0.69 0.4 1.26 0.41 ...\n $ LightActiveDistance     : num [1:940] 6.06 4.71 3.91 2.83 5.04 ...\n $ SedentaryActiveDistance : num [1:940] 0 0 0 0 0 0 0 0 0 0 ...\n $ VeryActiveMinutes       : num [1:940] 25 21 30 29 36 38 42 50 28 19 ...\n $ FairlyActiveMinutes     : num [1:940] 13 19 11 34 10 20 16 31 12 8 ...\n $ LightlyActiveMinutes    : num [1:940] 328 217 181 209 221 164 233 264 205 211 ...\n $ SedentaryMinutes        : num [1:940] 728 776 1218 726 773 ...\n $ Calories                : num [1:940] 1985 1797 1776 1745 1863 ...\n $ Month                   : chr [1:940] \"April\" \"April\" \"April\" \"April\" ...\n $ WeekDay                 : chr [1:940] \"Tuesday\" \"Wednesday\" \"Thursday\" \"Friday\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Id = col_double(),\n  ..   ActivityDate = col_character(),\n  ..   TotalSteps = col_double(),\n  ..   TotalDistance = col_double(),\n  ..   TrackerDistance = col_double(),\n  ..   LoggedActivitiesDistance = col_double(),\n  ..   VeryActiveDistance = col_double(),\n  ..   ModeratelyActiveDistance = col_double(),\n  ..   LightActiveDistance = col_double(),\n  ..   SedentaryActiveDistance = col_double(),\n  ..   VeryActiveMinutes = col_double(),\n  ..   FairlyActiveMinutes = col_double(),\n  ..   LightlyActiveMinutes = col_double(),\n  ..   SedentaryMinutes = col_double(),\n  ..   Calories = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nCode\nstr(sleep_day)\n\n\nspc_tbl_ [413 × 8] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Id                : num [1:413] 1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...\n $ TotalSleepRecords : num [1:413] 1 2 1 2 1 1 1 1 1 1 ...\n $ TotalMinutesAsleep: num [1:413] 327 384 412 340 700 304 360 325 361 430 ...\n $ TotalTimeInBed    : num [1:413] 346 407 442 367 712 320 377 364 384 449 ...\n $ Date              : Date[1:413], format: \"2016-04-12\" \"2016-04-13\" ...\n $ Time              : 'hms' num [1:413] 00:00:00 00:00:00 00:00:00 00:00:00 ...\n  ..- attr(*, \"units\")= chr \"secs\"\n $ Month             : chr [1:413] \"April\" \"April\" \"April\" \"April\" ...\n $ WeekDay           : chr [1:413] \"Tuesday\" \"Wednesday\" \"Friday\" \"Saturday\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Id = col_double(),\n  ..   SleepDay = col_character(),\n  ..   TotalSleepRecords = col_double(),\n  ..   TotalMinutesAsleep = col_double(),\n  ..   TotalTimeInBed = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\nCode\nstr(daily_Intensities)\n\n\nspc_tbl_ [940 × 12] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ Id                      : num [1:940] 1.5e+09 1.5e+09 1.5e+09 1.5e+09 1.5e+09 ...\n $ ActivityDay             : Date[1:940], format: \"2016-04-12\" \"2016-04-13\" ...\n $ SedentaryMinutes        : num [1:940] 728 776 1218 726 773 ...\n $ LightlyActiveMinutes    : num [1:940] 328 217 181 209 221 164 233 264 205 211 ...\n $ FairlyActiveMinutes     : num [1:940] 13 19 11 34 10 20 16 31 12 8 ...\n $ VeryActiveMinutes       : num [1:940] 25 21 30 29 36 38 42 50 28 19 ...\n $ SedentaryActiveDistance : num [1:940] 0 0 0 0 0 0 0 0 0 0 ...\n $ LightActiveDistance     : num [1:940] 6.06 4.71 3.91 2.83 5.04 ...\n $ ModeratelyActiveDistance: num [1:940] 0.55 0.69 0.4 1.26 0.41 ...\n $ VeryActiveDistance      : num [1:940] 1.88 1.57 2.44 2.14 2.71 ...\n $ Month                   : chr [1:940] \"April\" \"April\" \"April\" \"April\" ...\n $ WeekDay                 : chr [1:940] \"Tuesday\" \"Wednesday\" \"Thursday\" \"Friday\" ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   Id = col_double(),\n  ..   ActivityDay = col_character(),\n  ..   SedentaryMinutes = col_double(),\n  ..   LightlyActiveMinutes = col_double(),\n  ..   FairlyActiveMinutes = col_double(),\n  ..   VeryActiveMinutes = col_double(),\n  ..   SedentaryActiveDistance = col_double(),\n  ..   LightActiveDistance = col_double(),\n  ..   ModeratelyActiveDistance = col_double(),\n  ..   VeryActiveDistance = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\nUsing colnames() checking the column names of the given data frames.\n\n\n\nCode\ncolnames(weight_log_info)\n\n\n [1] \"Id\"             \"Date\"           \"WeightKg\"       \"WeightPounds\"  \n [5] \"Fat\"            \"BMI\"            \"IsManualReport\" \"LogId\"         \n [9] \"Time\"           \"Month\"          \"WeekDay\"        \"Time_of_day\"   \n\n\nCode\ncolnames(daily_calories)\n\n\n[1] \"Id\"          \"ActivityDay\" \"Calories\"    \"Month\"       \"WeekDay\"    \n\n\nCode\ncolnames(daily_steps)\n\n\n[1] \"Id\"          \"ActivityDay\" \"StepTotal\"   \"Month\"       \"WeekDay\"    \n\n\n\nRemoving dulicated rows and columns.\n\n\n\nCode\ndaily_activity <- daily_activity[!duplicated(daily_activity), ]\n\nsleep_day <- sleep_day[!duplicated(sleep_day), ]\n\ndaily_Intensities <- daily_Intensities[!duplicated(daily_Intensities), ]\n\nweight_log_info <- weight_log_info[!duplicated(weight_log_info), ]\n\nminute_steps_wide <- minute_steps_wide[!duplicated(minute_steps_wide), ]\n\nminute_intensities_wide <- minute_intensities_wide[!duplicated(minute_intensities_wide), ]\n\nminute_calories_wide <- minute_calories_wide[!duplicated(minute_calories_wide), ]\n\n\n\nMerging data by Id’s and creating a distinguishable combination of data frames to ensure a widened outlook.\n\n\n\nCode\ncalorie_steps <- merge(daily_calories,daily_steps, by = \"Id\",all = TRUE)\n\nweight_sleep <- merge(weight_log_info,sleep_day,by = \"Id\", all = TRUE)\n\ndailyActivity_sleep <- merge(daily_activity,sleep_day,by = \"Id\",all = TRUE)\n\ndailyIntensities_weight <- merge(daily_Intensities,weight_log_info, by = \"Id\",all = TRUE)\n\n\n\nUsing ‘inner_join()’ concatenating datasets by Id’s and creating a distinguishable combination of data frames to ensure a widened outlook.\n\n\n\nCode\nhourly_calories_intensities <- inner_join(hourly_calories,hourly_intensities, by = \"Id\",multiple = \"all\")\n\nhourly_calories_steps <- inner_join(hourly_calories,hourly_steps, by = \"Id\",multiple = \"all\")\n\nhourly_intensities_calories <- inner_join(calorie_steps,hourly_intensities, by = \"Id\",multiple = \"all\")\n\n\n\nOmmiting NA’s for dataset as it is mandatory in order to visualize.\n\n\n\nCode\ndailyActivity_sleep <- na.omit(dailyActivity_sleep)\ndailyIntensities_weight <- na.omit(dailyIntensities_weight)\nhourly_calories_intensities <- na.omit(hourly_calories_intensities)\ndaily_activity <- na.omit(daily_activity)\n\n\n\nGetting summary of data using summary() function.\n\n\n\nCode\nsummary(calorie_steps)\n\n\n       Id            ActivityDay.x           Calories      Month.x         \n Min.   :1.504e+09   Min.   :2016-04-12   Min.   :   0   Length:27800      \n 1st Qu.:2.320e+09   1st Qu.:2016-04-19   1st Qu.:1827   Class :character  \n Median :4.445e+09   Median :2016-04-26   Median :2156   Mode  :character  \n Mean   :4.833e+09   Mean   :2016-04-26   Mean   :2313                     \n 3rd Qu.:6.962e+09   3rd Qu.:2016-05-04   3rd Qu.:2800                     \n Max.   :8.878e+09   Max.   :2016-05-12   Max.   :4900                     \n  WeekDay.x         ActivityDay.y          StepTotal       Month.y         \n Length:27800       Min.   :2016-04-12   Min.   :    0   Length:27800      \n Class :character   1st Qu.:2016-04-19   1st Qu.: 3761   Class :character  \n Mode  :character   Median :2016-04-26   Median : 7443   Mode  :character  \n                    Mean   :2016-04-26   Mean   : 7673                     \n                    3rd Qu.:2016-05-04   3rd Qu.:10771                     \n                    Max.   :2016-05-12   Max.   :36019                     \n  WeekDay.y        \n Length:27800      \n Class :character  \n Mode  :character  \n                   \n                   \n                   \n\n\nCode\nsummary(weight_sleep)\n\n\n       Id                Date.x              WeightKg       WeightPounds  \n Min.   :1.504e+09   Min.   :2016-04-12   Min.   : 52.60   Min.   :116.0  \n 1st Qu.:5.577e+09   1st Qu.:2016-04-18   1st Qu.: 61.20   1st Qu.:134.9  \n Median :6.962e+09   Median :2016-04-28   Median : 61.50   Median :135.6  \n Mean   :6.235e+09   Mean   :2016-04-26   Mean   : 63.34   Mean   :139.6  \n 3rd Qu.:6.962e+09   3rd Qu.:2016-05-04   3rd Qu.: 62.00   3rd Qu.:136.7  \n Max.   :8.878e+09   Max.   :2016-05-12   Max.   :133.50   Max.   :294.3  \n                     NA's   :292          NA's   :292      NA's   :292    \n      Fat             BMI        IsManualReport      LogId          \n Min.   :22.00   Min.   :21.45   Mode :logical   Min.   :1.460e+12  \n 1st Qu.:22.00   1st Qu.:23.89   FALSE:55        1st Qu.:1.461e+12  \n Median :25.00   Median :24.00   TRUE :1059      Median :1.462e+12  \n Mean   :23.53   Mean   :24.42   NA's :292       Mean   :1.462e+12  \n 3rd Qu.:25.00   3rd Qu.:24.21                   3rd Qu.:1.462e+12  \n Max.   :25.00   Max.   :47.54                   Max.   :1.463e+12  \n NA's   :1355    NA's   :292                     NA's   :292        \n    Time.x           Month.x           WeekDay.x            Time_of_day  \n Length:1406       Length:1406        Length:1406        Night    :  23  \n Class1:hms        Class :character   Class :character   Morning  :  31  \n Class2:difftime   Mode  :character   Mode  :character   Afternoon:   1  \n Mode  :numeric                                          Evening  :1059  \n                                                         NA's     : 292  \n                                                                         \n                                                                         \n TotalSleepRecords TotalMinutesAsleep TotalTimeInBed      Date.y          \n Min.   :1.000     Min.   : 58.0      Min.   : 61.0   Min.   :2016-04-12  \n 1st Qu.:1.000     1st Qu.:400.0      1st Qu.:421.8   1st Qu.:2016-04-19  \n Median :1.000     Median :442.0      Median :457.0   Median :2016-04-27  \n Mean   :1.101     Mean   :433.7      Mean   :458.3   Mean   :2016-04-26  \n 3rd Qu.:1.000     3rd Qu.:476.2      3rd Qu.:510.0   3rd Qu.:2016-05-04  \n Max.   :3.000     Max.   :796.0      Max.   :961.0   Max.   :2016-05-12  \n NA's   :26        NA's   :26         NA's   :26      NA's   :26          \n    Time.y           Month.y           WeekDay.y        \n Length:1406       Length:1406        Length:1406       \n Class1:hms        Class :character   Class :character  \n Class2:difftime   Mode  :character   Mode  :character  \n Mode  :numeric                                         \n                                                        \n                                                        \n                                                        \n\n\nCode\nsummary(dailyActivity_sleep)\n\n\n       Id             ActivityDate          TotalSteps    TotalDistance   \n Min.   :1.504e+09   Min.   :2016-04-12   Min.   :    0   Min.   : 0.000  \n 1st Qu.:3.977e+09   1st Qu.:2016-04-19   1st Qu.: 4660   1st Qu.: 3.160  \n Median :4.703e+09   Median :2016-04-27   Median : 8585   Median : 6.120  \n Mean   :5.021e+09   Mean   :2016-04-26   Mean   : 8108   Mean   : 5.722  \n 3rd Qu.:6.962e+09   3rd Qu.:2016-05-04   3rd Qu.:11317   3rd Qu.: 7.920  \n Max.   :8.792e+09   Max.   :2016-05-12   Max.   :22988   Max.   :17.950  \n TrackerDistance  LoggedActivitiesDistance VeryActiveDistance\n Min.   : 0.000   Min.   :0.0000           Min.   : 0.000    \n 1st Qu.: 3.160   1st Qu.:0.0000           1st Qu.: 0.000    \n Median : 6.120   Median :0.0000           Median : 0.530    \n Mean   : 5.715   Mean   :0.1215           Mean   : 1.397    \n 3rd Qu.: 7.880   3rd Qu.:0.0000           3rd Qu.: 2.310    \n Max.   :17.950   Max.   :4.9421           Max.   :13.400    \n ModeratelyActiveDistance LightActiveDistance SedentaryActiveDistance\n Min.   :0.0000           Min.   : 0.000      Min.   :0.0000000      \n 1st Qu.:0.0000           1st Qu.: 2.350      1st Qu.:0.0000000      \n Median :0.4000           Median : 3.540      Median :0.0000000      \n Mean   :0.7309           Mean   : 3.532      Mean   :0.0006795      \n 3rd Qu.:1.0000           3rd Qu.: 4.830      3rd Qu.:0.0000000      \n Max.   :6.4800           Max.   :10.300      Max.   :0.1100000      \n VeryActiveMinutes FairlyActiveMinutes LightlyActiveMinutes SedentaryMinutes\n Min.   :  0.00    Min.   :  0.00      Min.   :  0.0        Min.   :   0.0  \n 1st Qu.:  0.00    1st Qu.:  0.00      1st Qu.:144.0        1st Qu.: 659.0  \n Median :  8.00    Median : 10.00      Median :200.0        Median : 734.0  \n Mean   : 23.94    Mean   : 17.34      Mean   :199.8        Mean   : 799.4  \n 3rd Qu.: 36.00    3rd Qu.: 24.00      3rd Qu.:258.0        3rd Qu.: 853.0  \n Max.   :210.00    Max.   :143.00      Max.   :518.0        Max.   :1440.0  \n    Calories      Month.x           WeekDay.x         TotalSleepRecords\n Min.   :   0   Length:12348       Length:12348       Min.   :1.000    \n 1st Qu.:1776   Class :character   Class :character   1st Qu.:1.000    \n Median :2158   Mode  :character   Mode  :character   Median :1.000    \n Mean   :2323                                         Mean   :1.122    \n 3rd Qu.:2859                                         3rd Qu.:1.000    \n Max.   :4900                                         Max.   :3.000    \n TotalMinutesAsleep TotalTimeInBed       Date                Time         \n Min.   : 58.0      Min.   : 61.0   Min.   :2016-04-12   Length:12348     \n 1st Qu.:361.0      1st Qu.:402.0   1st Qu.:2016-04-19   Class1:hms       \n Median :432.0      Median :462.0   Median :2016-04-27   Class2:difftime  \n Mean   :419.1      Mean   :458.2   Mean   :2016-04-26   Mode  :numeric   \n 3rd Qu.:492.0      3rd Qu.:526.0   3rd Qu.:2016-05-04                    \n Max.   :796.0      Max.   :961.0   Max.   :2016-05-12                    \n   Month.y           WeekDay.y        \n Length:12348       Length:12348      \n Class :character   Class :character  \n Mode  :character   Mode  :character  \n                                      \n                                      \n                                      \n\n\nCode\nsummary(dailyIntensities_weight)\n\n\n       Id             ActivityDay         SedentaryMinutes LightlyActiveMinutes\n Min.   :1.504e+09   Min.   :2016-04-12   Min.   :   0.0   Min.   :  0.0       \n 1st Qu.:1.504e+09   1st Qu.:2016-04-19   1st Qu.: 654.0   1st Qu.:191.8       \n Median :2.912e+09   Median :2016-04-27   Median : 739.0   Median :233.0       \n Mean   :2.912e+09   Mean   :2016-04-27   Mean   : 792.0   Mean   :224.4       \n 3rd Qu.:4.320e+09   3rd Qu.:2016-05-04   3rd Qu.: 834.5   3rd Qu.:288.8       \n Max.   :4.320e+09   Max.   :2016-05-12   Max.   :1440.0   Max.   :390.0       \n FairlyActiveMinutes VeryActiveMinutes SedentaryActiveDistance\n Min.   : 0.00       Min.   : 0.00     Min.   :0              \n 1st Qu.: 8.00       1st Qu.: 1.00     1st Qu.:0              \n Median :13.50       Median :14.50     Median :0              \n Mean   :15.74       Mean   :21.15     Mean   :0              \n 3rd Qu.:23.00       3rd Qu.:37.75     3rd Qu.:0              \n Max.   :47.00       Max.   :78.00     Max.   :0              \n LightActiveDistance ModeratelyActiveDistance VeryActiveDistance\n Min.   :0.000       Min.   :0.0000           Min.   :0.0000    \n 1st Qu.:2.973       1st Qu.:0.3225           1st Qu.:0.0625    \n Median :4.255       Median :0.5650           Median :1.0350    \n Mean   :3.961       Mean   :0.6482           Mean   :1.5682    \n 3rd Qu.:5.397       3rd Qu.:0.9875           3rd Qu.:2.7850    \n Max.   :6.440       Max.   :2.1200           Max.   :6.4000    \n   Month.x           WeekDay.x              Date               WeightKg   \n Length:62          Length:62          Min.   :2016-04-17   Min.   :52.6  \n Class :character   Class :character   1st Qu.:2016-04-17   1st Qu.:52.6  \n Mode  :character   Mode  :character   Median :2016-04-24   Median :62.5  \n                                       Mean   :2016-04-24   Mean   :62.5  \n                                       3rd Qu.:2016-05-02   3rd Qu.:72.4  \n                                       Max.   :2016-05-02   Max.   :72.4  \n  WeightPounds        Fat            BMI        IsManualReport\n Min.   :116.0   Min.   :22.0   Min.   :22.65   Mode:logical  \n 1st Qu.:116.0   1st Qu.:22.0   1st Qu.:22.65   TRUE:62       \n Median :137.8   Median :23.5   Median :25.05                 \n Mean   :137.8   Mean   :23.5   Mean   :25.05                 \n 3rd Qu.:159.6   3rd Qu.:25.0   3rd Qu.:27.45                 \n Max.   :159.6   Max.   :25.0   Max.   :27.45                 \n     LogId               Time            Month.y           WeekDay.y        \n Min.   :1.461e+12   Length:62         Length:62          Length:62         \n 1st Qu.:1.461e+12   Class1:hms        Class :character   Class :character  \n Median :1.462e+12   Class2:difftime   Mode  :character   Mode  :character  \n Mean   :1.462e+12   Mode  :numeric                                         \n 3rd Qu.:1.462e+12                                                          \n Max.   :1.462e+12                                                          \n    Time_of_day\n Night    : 0  \n Morning  : 0  \n Afternoon: 0  \n Evening  :62  \n               \n               \n\n\nCode\nsummary(hourly_calories_intensities)\n\n\n       Id               Calories          Date.x              Time.x        \n Min.   :1.504e+09   Min.   : 42.00   Min.   :2016-04-12   Length:15393213  \n 1st Qu.:2.320e+09   1st Qu.: 63.00   1st Qu.:2016-04-19   Class1:hms       \n Median :4.445e+09   Median : 83.00   Median :2016-04-26   Class2:difftime  \n Mean   :4.820e+09   Mean   : 97.74   Mean   :2016-04-26   Mode  :numeric   \n 3rd Qu.:6.962e+09   3rd Qu.:109.00   3rd Qu.:2016-05-04                    \n Max.   :8.878e+09   Max.   :948.00   Max.   :2016-05-12                    \n   Month.x           WeekDay.x           Time_of_day.x     TotalIntensity  \n Length:15393213    Length:15393213    Night    :4545397   Min.   :  0.00  \n Class :character   Class :character   Morning  :3880444   1st Qu.:  0.00  \n Mode  :character   Mode  :character   Afternoon:3814580   Median :  3.00  \n                                       Evening  :3152792   Mean   : 12.06  \n                                                           3rd Qu.: 16.00  \n                                                           Max.   :180.00  \n AverageIntensity     Date.y              Time.y           Month.y         \n Min.   :0.0000   Min.   :2016-04-12   Length:15393213   Length:15393213   \n 1st Qu.:0.0000   1st Qu.:2016-04-19   Class1:hms        Class :character  \n Median :0.0500   Median :2016-04-26   Class2:difftime   Mode  :character  \n Mean   :0.2010   Mean   :2016-04-26   Mode  :numeric                      \n 3rd Qu.:0.2667   3rd Qu.:2016-05-04                                       \n Max.   :3.0000   Max.   :2016-05-12                                       \n  WeekDay.y           Time_of_day.y    \n Length:15393213    Night    :4545397  \n Class :character   Morning  :3880444  \n Mode  :character   Afternoon:3814580  \n                    Evening  :3152792  \n                                       \n                                       \n\n\nCode\nsummary(hourly_calories_steps)\n\n\n       Id               Calories          Date.x              Time.x        \n Min.   :1.504e+09   Min.   : 42.00   Min.   :2016-04-12   Length:15393213  \n 1st Qu.:2.320e+09   1st Qu.: 63.00   1st Qu.:2016-04-19   Class1:hms       \n Median :4.445e+09   Median : 83.00   Median :2016-04-26   Class2:difftime  \n Mean   :4.820e+09   Mean   : 97.74   Mean   :2016-04-26   Mode  :numeric   \n 3rd Qu.:6.962e+09   3rd Qu.:109.00   3rd Qu.:2016-05-04                    \n Max.   :8.878e+09   Max.   :948.00   Max.   :2016-05-12                    \n   Month.x           WeekDay.x           Time_of_day.x       StepTotal      \n Length:15393213    Length:15393213    Night    :4545397   Min.   :    0.0  \n Class :character   Class :character   Morning  :3880444   1st Qu.:    0.0  \n Mode  :character   Mode  :character   Afternoon:3814580   Median :   41.0  \n                                       Evening  :3152792   Mean   :  321.2  \n                                                           3rd Qu.:  359.0  \n                                                           Max.   :10554.0  \n     Date.y              Time.y           Month.y           WeekDay.y        \n Min.   :2016-04-12   Length:15393213   Length:15393213    Length:15393213   \n 1st Qu.:2016-04-19   Class1:hms        Class :character   Class :character  \n Median :2016-04-26   Class2:difftime   Mode  :character   Mode  :character  \n Mean   :2016-04-26   Mode  :numeric                                         \n 3rd Qu.:2016-05-04                                                          \n Max.   :2016-05-12                                                          \n   Time_of_day.y    \n Night    :4545397  \n Morning  :3880444  \n Afternoon:3814580  \n Evening  :3152792  \n                    \n                    \n\n\nCode\nsummary(hourly_intensities_calories)\n\n\n       Id            ActivityDay.x           Calories      Month.x         \n Min.   :1.504e+09   Min.   :2016-04-12   Min.   :   0   Length:19615642   \n 1st Qu.:2.320e+09   1st Qu.:2016-04-19   1st Qu.:1821   Class :character  \n Median :4.445e+09   Median :2016-04-26   Median :2162   Mode  :character  \n Mean   :4.802e+09   Mean   :2016-04-26   Mean   :2320                     \n 3rd Qu.:6.962e+09   3rd Qu.:2016-05-04   3rd Qu.:2809                     \n Max.   :8.878e+09   Max.   :2016-05-12   Max.   :4900                     \n  WeekDay.x         ActivityDay.y          StepTotal       Month.y         \n Length:19615642    Min.   :2016-04-12   Min.   :    0   Length:19615642   \n Class :character   1st Qu.:2016-04-19   1st Qu.: 3761   Class :character  \n Mode  :character   Median :2016-04-26   Median : 7502   Mode  :character  \n                    Mean   :2016-04-26   Mean   : 7696                     \n                    3rd Qu.:2016-05-04   3rd Qu.:10817                     \n                    Max.   :2016-05-12   Max.   :36019                     \n  WeekDay.y         TotalIntensity   AverageIntensity      Date           \n Length:19615642    Min.   :  0.00   Min.   :0.0000   Min.   :2016-04-12  \n Class :character   1st Qu.:  0.00   1st Qu.:0.0000   1st Qu.:2016-04-19  \n Mode  :character   Median :  3.00   Median :0.0500   Median :2016-04-26  \n                    Mean   : 12.06   Mean   :0.2010   Mean   :2016-04-26  \n                    3rd Qu.: 16.00   3rd Qu.:0.2667   3rd Qu.:2016-05-04  \n                    Max.   :180.00   Max.   :3.0000   Max.   :2016-05-12  \n     Time             Month             WeekDay             Time_of_day     \n Length:19615642   Length:19615642    Length:19615642    Night    :5791418  \n Class1:hms        Class :character   Class :character   Morning  :4945271  \n Class2:difftime   Mode  :character   Mode  :character   Afternoon:4861084  \n Mode  :numeric                                          Evening  :4017869"
  },
  {
    "objectID": "Bellabeat.html#analyze-phase",
    "href": "Bellabeat.html#analyze-phase",
    "title": "Case Study on Bellabeat",
    "section": "7 ANALYZE PHASE",
    "text": "7 ANALYZE PHASE\n\nIn this crucial phase, I will analyze the clean and processed dataset to uncover answers to known and untapped questions. This will guide Bellabeat’s stakeholders and marketing executives to make informed decisions and develop a targeted marketing campaign. Ultimately, this will help retain the existing customer base as well as improve services to the highest standards possible.\n\n\n7.1 Key Task\n\n\nA list of computations was performed to perceive information in a more comprehensive manner in order to understand how female customers are utilizing products and services.\nThe analysis was conducted to obtain a thorough understanding of female customer traits and to identify any patterns that could help the analytics team determine areas for improvement.\nConcatenating multiple datasets expands the ability to explore trends and relationships that may exist, thereby providing a clarity on the significance of the user base.\nSeveral columns were aggregated in order to create another attribute on which comparisons were performed accordingly to ensure a refined understanding of the day to day activity recorded through the bellabeat app.\nVarious R built-in functions were used to thoroughly examine these datasets and to finalize the profiling for this analysis.\n\n\n\n\n7.2 Deliverables\n\n\nNumerous analysis were performed using some specific functions such as summarise(), distinct(),group_by(),describe(),table(), etc.\nThe computations will state a brief on how female customers perceive services and products across different categories.\nIn addition,some statistical operations were also performed to get the relevant distribution of attributes within datasets influencing customer’s conduct.\n\n\n\n\n7.3 Code Chunk\n\nGetting an overview of the maximum and minimum calories burned by each user using max() and min() function respectively.\n\n\n\nCode\ncalorie_steps %>% \n  group_by(Id) %>% \n  summarise(Maximum_Calories = max(Calories),Minimum_Calores= min(Calories)) %>% \n  distinct() %>% \n  ungroup() %>% \n  slice(1:13)\n\n\n# A tibble: 13 × 3\n           Id Maximum_Calories Minimum_Calores\n        <dbl>            <dbl>           <dbl>\n 1 1503960366             2159               0\n 2 1624580081             2690            1002\n 3 1644430081             3846            1276\n 4 1844505072             2130             665\n 5 1927972279             2638            1383\n 6 2022484408             3158            1848\n 7 2026352035             1926            1141\n 8 2320127002             2124            1125\n 9 2347167796             2670             403\n10 2873212765             2241            1431\n11 3372868164             2124            1237\n12 3977333714             1760              52\n13 4020332650             3879            1120\n\n\n\nGetting a brief on the comparison between calories and steps using max().\n\n\n\nCode\ncalorie_steps %>% \n  group_by(Id) %>%\n  summarise(Maximum_step = max(StepTotal),Calories = max(Calories)) %>% \n  distinct() %>% \n  ungroup() %>% \n  slice(1:13)\n\n\n# A tibble: 13 × 3\n           Id Maximum_step Calories\n        <dbl>        <dbl>    <dbl>\n 1 1503960366        18134     2159\n 2 1624580081        36019     2690\n 3 1644430081        18213     3846\n 4 1844505072         8054     2130\n 5 1927972279         3790     2638\n 6 2022484408        18387     3158\n 7 2026352035        12357     1926\n 8 2320127002        10725     2124\n 9 2347167796        22244     2670\n10 2873212765         9685     2241\n11 3372868164         9715     2124\n12 3977333714        16520     1760\n13 4020332650        11728     3879\n\n\n\nTaking a comparison on some specific parameters such as total steps, total distance and Tracked distance based on each weekday.\n\n\n\nCode\ndaily_activity %>%\n  group_by(WeekDay) %>%\n  select(TotalSteps,TotalDistance,TrackerDistance) %>%\n  summarise_all(mean)\n\n\n# A tibble: 7 × 4\n  WeekDay   TotalSteps TotalDistance TrackerDistance\n  <chr>          <dbl>         <dbl>           <dbl>\n1 Friday         7448.          5.31            5.30\n2 Monday         7781.          5.55            5.53\n3 Saturday       8153.          5.85            5.85\n4 Sunday         6933.          5.03            5.03\n5 Thursday       7406.          5.31            5.29\n6 Tuesday        8125.          5.83            5.81\n7 Wednesday      7559.          5.49            5.47\n\n\n\nUnraveling the most to least active covered distance average using a summarize_all() function.\n\n\n\nCode\ndailyActivity_sleep %>% \n  select(VeryActiveDistance,ModeratelyActiveDistance,LightActiveDistance) %>%\n  summarize_all(mean)\n\n\n  VeryActiveDistance ModeratelyActiveDistance LightActiveDistance\n1           1.397498                0.7308617            3.532016\n\n\n\nUnderstanding the split between most and least active time spent on workout grouped by each weekday using summarize_all().\n\n\n\nCode\ndaily_activity %>%\n  group_by(WeekDay) %>% \n  select(VeryActiveMinutes,FairlyActiveMinutes,LightlyActiveMinutes) %>% \n  summarize_all(mean)\n\n\n# A tibble: 7 × 4\n  WeekDay   VeryActiveMinutes FairlyActiveMinutes LightlyActiveMinutes\n  <chr>                 <dbl>               <dbl>                <dbl>\n1 Friday                 20.1                12.1                 204.\n2 Monday                 23.1                14                   192.\n3 Saturday               21.9                15.2                 207.\n4 Sunday                 20.0                14.5                 174.\n5 Thursday               19.4                12.0                 185.\n6 Tuesday                23.0                14.3                 197.\n7 Wednesday              20.8                13.1                 190.\n\n\n\nPreviewing sum of very active minutes, fairly active minutes and lightly active minutes grouped by distinctive Id’s and month.\n\n\n\nCode\ndaily_activity %>%\n  group_by(Id,Month) %>%\n  summarize_at(vars(VeryActiveMinutes, FairlyActiveMinutes, LightlyActiveMinutes), sum) %>% \n  distinct() %>% \n  ungroup() %>% \n  slice(1:15)\n\n\n# A tibble: 15 × 5\n           Id Month VeryActiveMinutes FairlyActiveMinutes LightlyActiveMinutes\n        <dbl> <chr>             <dbl>               <dbl>                <dbl>\n 1 1503960366 April               762                 349                 4250\n 2 1503960366 May                 438                 245                 2568\n 3 1624580081 April                76                 111                 3205\n 4 1624580081 May                 193                  69                 1553\n 5 1644430081 April               171                 456                 3292\n 6 1644430081 May                 116                 185                 2062\n 7 1844505072 April                 4                  33                 3111\n 8 1844505072 May                   0                   7                  468\n 9 1927972279 April                 1                  15                  772\n10 1927972279 May                  40                   9                  424\n11 2022484408 April               691                 368                 5077\n12 2022484408 May                 434                 232                 2904\n13 2026352035 April                 3                   8                 4325\n14 2026352035 May                   0                   0                 3631\n15 2320127002 April                17                  53                 3867\n\n\n\nGlance on maximum amount of sleep vs total time in bed using max().\n\n\n\nCode\nsleep_day %>% \n  group_by(Id,Month) %>% \n  summarize(max(TotalMinutesAsleep),max(TotalTimeInBed)) %>% \n  distinct() %>% \n  ungroup() %>% \n  slice(1:20)\n\n\n# A tibble: 20 × 4\n           Id Month `max(TotalMinutesAsleep)` `max(TotalTimeInBed)`\n        <dbl> <chr>                     <dbl>                 <dbl>\n 1 1503960366 April                       700                   712\n 2 1503960366 May                         594                   611\n 3 1644430081 April                       124                   142\n 4 1644430081 May                         796                   961\n 5 1844505072 April                       722                   961\n 6 1844505072 May                         590                   961\n 7 1927972279 April                       750                   775\n 8 2026352035 April                       573                   607\n 9 2026352035 May                         541                   568\n10 2320127002 April                        61                    69\n11 2347167796 April                       556                   602\n12 3977333714 April                       424                   566\n13 3977333714 May                         383                   626\n14 4020332650 April                       501                   541\n15 4020332650 May                         478                   536\n16 4319703577 April                       692                   722\n17 4319703577 May                         602                   638\n18 4388161847 April                       619                   641\n19 4388161847 May                         547                   597\n20 4445114986 April                       462                   499\n\n\n\nGlance on minimum amount of sleep attained vs total time in bed using min().\n\n\n\nCode\nsleep_day %>% \n  group_by(Id) %>% \n  summarize(min(TotalMinutesAsleep),min(TotalTimeInBed)) %>% \n  distinct() %>% \n  ungroup() %>% \n  slice(1:13)\n\n\n# A tibble: 13 × 3\n           Id `min(TotalMinutesAsleep)` `min(TotalTimeInBed)`\n        <dbl>                     <dbl>                 <dbl>\n 1 1503960366                       245                   264\n 2 1644430081                       119                   127\n 3 1844505072                       590                   961\n 4 1927972279                       166                   178\n 5 2026352035                       357                   380\n 6 2320127002                        61                    69\n 7 2347167796                       374                   386\n 8 3977333714                       152                   305\n 9 4020332650                        77                    77\n10 4319703577                        59                    65\n11 4388161847                        62                    65\n12 4445114986                        98                   107\n13 4558609924                       103                   121\n\n\n\nGlimpse on a comparison between sedentary minutes, lightly active minutes and fairly active minutes using summarize_all().\n\n\n\nCode\ndaily_Intensities %>% \n  group_by(WeekDay) %>% \n  select(SedentaryMinutes,LightlyActiveMinutes,FairlyActiveMinutes) %>% \n  summarise_all(mean)\n\n\n# A tibble: 7 × 4\n  WeekDay   SedentaryMinutes LightlyActiveMinutes FairlyActiveMinutes\n  <chr>                <dbl>                <dbl>               <dbl>\n1 Friday               1000.                 204.                12.1\n2 Monday               1028.                 192.                14  \n3 Saturday              964.                 207.                15.2\n4 Sunday                990.                 174.                14.5\n5 Thursday              962.                 185.                12.0\n6 Tuesday              1007.                 197.                14.3\n7 Wednesday             989.                 190.                13.1\n\n\n\nPreviewing a distinct user’s total sum of sedentary minutes, lightly active minutes and fairly active minutes using a sum() function.\n\n\n\nCode\ndailyIntensities_weight %>% \n  group_by(Id) %>% \n  summarise(sedentary_Minutes=sum(SedentaryMinutes), LightlyActive_Minutes=sum(LightlyActiveMinutes), \n            Active_Minutes=sum(FairlyActiveMinutes)) %>% \n            distinct() %>% ungroup() %>% slice(1:13)\n\n\n# A tibble: 2 × 4\n          Id sedentary_Minutes LightlyActive_Minutes Active_Minutes\n       <dbl>             <dbl>                 <dbl>          <dbl>\n1 1503960366             26293                  6818            594\n2 4319703577             22810                  7092            382\n\n\n\nUsing ungroup() and slice() to preview the set number of entries.\n\n\nGlimpse on fetching out the average intensity of workout under several parameters with exact hour and precise time of the day.\n\n\n\nCode\ndailyIntensities_weight %>% \n  group_by(Time_of_day,Time) %>% \n  select(SedentaryMinutes,LightlyActiveMinutes,FairlyActiveMinutes,VeryActiveMinutes) %>% \n  summarise_all(mean) %>% \n  ungroup() %>% \n  slice(1:20)\n\n\n# A tibble: 1 × 6\n  Time_of_day Time     SedentaryMinutes LightlyActiveMinutes FairlyActiveMinutes\n  <fct>       <time>              <dbl>                <dbl>               <dbl>\n1 Evening     23:59:59             792.                 224.                15.7\n# ℹ 1 more variable: VeryActiveMinutes <dbl>\n\n\n\nGlimpse on fetching out the average time of workout recorded under several parameters with exact hour and precise time of the day.\n\n\n\nCode\ndailyIntensities_weight %>% \n  group_by(Time_of_day,Time) %>% \n  select(LightlyActiveMinutes,ModeratelyActiveDistance,VeryActiveDistance) %>% \n  summarise_all(mean) %>% \n  ungroup() %>% \n  slice(1:20)\n\n\n# A tibble: 1 × 5\n  Time_of_day Time     LightlyActiveMinutes ModeratelyActiveDistance\n  <fct>       <time>                  <dbl>                    <dbl>\n1 Evening     23:59:59                 224.                    0.648\n# ℹ 1 more variable: VeryActiveDistance <dbl>\n\n\n\nPreviewing exact intensity ,calories and step total distribution on the basis of time of day parameter.\n\n\n\nCode\nhourly_intensities_calories %>% \n  group_by(Time_of_day) %>% \n  select(Calories,StepTotal,TotalIntensity) %>% \n  summarise_all(mean)\n\n\n# A tibble: 4 × 4\n  Time_of_day Calories StepTotal TotalIntensity\n  <fct>          <dbl>     <dbl>          <dbl>\n1 Night          2320.     7694.           2.71\n2 Morning        2321.     7697.          15.5 \n3 Afternoon      2319.     7699.          19.3 \n4 Evening        2319.     7696.          12.6 \n\n\n\nUsing quantile function dividing and understanding the dataset overall split and difference.\n\n\nAS NA’s are not allowed in the input data so it is being removed through na.omit() function.\n\n\n\nCode\ndailyIntensities_weight <- na.omit(dailyIntensities_weight)\n\nsapply(dailyIntensities_weight[,c(\"LightlyActiveMinutes\",\"ModeratelyActiveDistance\",\"VeryActiveDistance\",\"WeightKg\")]\n       , quantile, probs = c(0.25,0.35,0.5,0.75,0.85,1))\n\n\n     LightlyActiveMinutes ModeratelyActiveDistance VeryActiveDistance WeightKg\n25%                191.75                   0.3225             0.0625     52.6\n35%                207.05                   0.4100             0.2765     52.6\n50%                233.00                   0.5650             1.0350     62.5\n75%                288.75                   0.9875             2.7850     72.4\n85%                312.70                   1.1540             3.3350     72.4\n100%               390.00                   2.1200             6.4000     72.4\n\n\n\nTaking a look at the overall weight distribution in comparison with total time in bed and other parameter indices using a quantile() function.\n\n\nAS NA’s are not allowed in the input data so it is being removed through na.omit() function.\n\n\n\nCode\nweight_sleep <- na.omit(weight_sleep)\n\nsapply(weight_sleep[,c(\"WeightPounds\",\"Fat\",\"BMI\",\"TotalTimeInBed\",\"TotalMinutesAsleep\" )], \n       quantile, probs = c(0.25,0.35,0.5,0.75,0.85,1))\n\n\n     WeightPounds Fat   BMI TotalTimeInBed TotalMinutesAsleep\n25%      115.9631  22 22.65          351.5              332.5\n35%      115.9631  22 22.65          380.5              360.5\n50%      159.6147  25 27.45          449.0              430.0\n75%      159.6147  25 27.45          522.0              505.5\n85%      159.6147  25 27.45          550.5              526.0\n100%     159.6147  25 27.45          722.0              700.0\n\n\n\nSummarizing the dataset specific column to take up the exact overview of respective columns and also rounding of the summary in two decimal places using ‘digit’.\n\n\n\nCode\nhourly_calories_intensities %>% \n  select(Calories,TotalIntensity, AverageIntensity) %>% \n  summary(mean, median, max, min, digits = 2)\n\n\n    Calories   TotalIntensity AverageIntensity\n Min.   : 42   Min.   :  0    Min.   :0.00    \n 1st Qu.: 63   1st Qu.:  0    1st Qu.:0.00    \n Median : 83   Median :  3    Median :0.05    \n Mean   : 98   Mean   : 12    Mean   :0.20    \n 3rd Qu.:109   3rd Qu.: 16    3rd Qu.:0.27    \n Max.   :948   Max.   :180    Max.   :3.00    \n\n\n\nGetting a distinct Id’s wise overview of calories and total step count.\n\n\n\nCode\nhourly_calories_steps %>% \n  group_by(Id) %>% \n  summarize(Calories = mean(Calories), Step_Total = mean(StepTotal)) %>% \n  distinct()\n\n\n# A tibble: 33 × 3\n           Id Calories Step_Total\n        <dbl>    <dbl>      <dbl>\n 1 1503960366     78.5      522. \n 2 1624580081     62.5      242. \n 3 1644430081    119.       308. \n 4 1844505072     66.6      109. \n 5 1927972279     91.5       38.6\n 6 2022484408    105.       478. \n 7 2026352035     64.9      234. \n 8 2320127002     72.6      199. \n 9 2347167796     88.7      414. \n10 2873212765     80.2      318. \n# ℹ 23 more rows\n\n\n\nDigging up various descriptive statistics and different prospects in the dataset using a described() function.\n\n\n\nCode\ndescribe(minute_calories_wide)\n\n\n           vars     n         mean           sd       median      trimmed\nId            1 21645 4.836965e+09 2.424088e+09 4.445115e+09 4.754963e+09\nCalories00    2 21645 1.620000e+00 1.400000e+00 1.220000e+00 1.300000e+00\nCalories01    3 21645 1.630000e+00 1.400000e+00 1.220000e+00 1.310000e+00\nCalories02    4 21645 1.640000e+00 1.410000e+00 1.220000e+00 1.310000e+00\nCalories03    5 21645 1.640000e+00 1.420000e+00 1.220000e+00 1.310000e+00\nCalories04    6 21645 1.640000e+00 1.430000e+00 1.220000e+00 1.310000e+00\nCalories05    7 21645 1.640000e+00 1.440000e+00 1.220000e+00 1.310000e+00\nCalories06    8 21645 1.640000e+00 1.440000e+00 1.220000e+00 1.310000e+00\nCalories07    9 21645 1.630000e+00 1.420000e+00 1.220000e+00 1.300000e+00\nCalories08   10 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories09   11 21645 1.620000e+00 1.400000e+00 1.220000e+00 1.300000e+00\nCalories10   12 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories11   13 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories12   14 21645 1.610000e+00 1.400000e+00 1.220000e+00 1.290000e+00\nCalories13   15 21645 1.610000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories14   16 21645 1.610000e+00 1.400000e+00 1.220000e+00 1.290000e+00\nCalories15   17 21645 1.610000e+00 1.400000e+00 1.220000e+00 1.290000e+00\nCalories16   18 21645 1.610000e+00 1.400000e+00 1.220000e+00 1.280000e+00\nCalories17   19 21645 1.610000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories18   20 21645 1.610000e+00 1.400000e+00 1.220000e+00 1.290000e+00\nCalories19   21 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories20   22 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories21   23 21645 1.610000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories22   24 21645 1.630000e+00 1.420000e+00 1.220000e+00 1.300000e+00\nCalories23   25 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories24   26 21645 1.610000e+00 1.420000e+00 1.220000e+00 1.290000e+00\nCalories25   27 21645 1.620000e+00 1.420000e+00 1.220000e+00 1.290000e+00\nCalories26   28 21645 1.610000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories27   29 21645 1.620000e+00 1.420000e+00 1.220000e+00 1.290000e+00\nCalories28   30 21645 1.620000e+00 1.420000e+00 1.220000e+00 1.290000e+00\nCalories29   31 21645 1.620000e+00 1.430000e+00 1.220000e+00 1.300000e+00\nCalories30   32 21645 1.620000e+00 1.420000e+00 1.220000e+00 1.290000e+00\nCalories31   33 21645 1.630000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories32   34 21645 1.630000e+00 1.430000e+00 1.220000e+00 1.300000e+00\nCalories33   35 21645 1.640000e+00 1.440000e+00 1.220000e+00 1.300000e+00\nCalories34   36 21645 1.630000e+00 1.430000e+00 1.220000e+00 1.300000e+00\nCalories35   37 21645 1.630000e+00 1.420000e+00 1.220000e+00 1.310000e+00\nCalories36   38 21645 1.640000e+00 1.460000e+00 1.220000e+00 1.310000e+00\nCalories37   39 21645 1.640000e+00 1.450000e+00 1.220000e+00 1.300000e+00\nCalories38   40 21645 1.630000e+00 1.450000e+00 1.220000e+00 1.300000e+00\nCalories39   41 21645 1.630000e+00 1.430000e+00 1.220000e+00 1.300000e+00\nCalories40   42 21645 1.630000e+00 1.420000e+00 1.220000e+00 1.300000e+00\nCalories41   43 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories42   44 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories43   45 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories44   46 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories45   47 21645 1.620000e+00 1.400000e+00 1.220000e+00 1.300000e+00\nCalories46   48 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories47   49 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.290000e+00\nCalories48   50 21645 1.620000e+00 1.400000e+00 1.220000e+00 1.300000e+00\nCalories49   51 21645 1.620000e+00 1.400000e+00 1.220000e+00 1.300000e+00\nCalories50   52 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories51   53 21645 1.610000e+00 1.400000e+00 1.220000e+00 1.290000e+00\nCalories52   54 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories53   55 21645 1.620000e+00 1.400000e+00 1.220000e+00 1.300000e+00\nCalories54   56 21645 1.620000e+00 1.410000e+00 1.220000e+00 1.300000e+00\nCalories55   57 21645 1.620000e+00 1.390000e+00 1.220000e+00 1.300000e+00\nCalories56   58 21645 1.610000e+00 1.380000e+00 1.220000e+00 1.290000e+00\nCalories57   59 21645 1.610000e+00 1.370000e+00 1.220000e+00 1.300000e+00\nCalories58   60 21645 1.610000e+00 1.370000e+00 1.220000e+00 1.300000e+00\nCalories59   61 21645 1.610000e+00 1.370000e+00 1.220000e+00 1.300000e+00\nDate         62 21645          NaN           NA           NA          NaN\nTime         63 21645          NaN           NA           NA          NaN\nMonth*       64 21645 1.360000e+00 4.800000e-01 1.000000e+00 1.330000e+00\nWeekDay*     65 21645 4.090000e+00 2.030000e+00 4.000000e+00 4.110000e+00\n                    mad         min          max        range  skew kurtosis\nId         3.586058e+09 1.50396e+09 8.877689e+09 7.373729e+09  0.19    -1.27\nCalories00 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.15    23.73\nCalories01 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.14    23.72\nCalories02 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.02    22.18\nCalories03 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.03    21.64\nCalories04 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.03    21.48\nCalories05 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.11    22.63\nCalories06 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.07    22.26\nCalories07 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.13    22.92\nCalories08 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.13    22.97\nCalories09 4.100000e-01 7.00000e-01 1.676000e+01 1.606000e+01  4.05    21.62\nCalories10 4.100000e-01 7.00000e-01 1.744000e+01 1.674000e+01  4.11    22.27\nCalories11 4.100000e-01 7.00000e-01 1.676000e+01 1.606000e+01  4.10    22.16\nCalories12 4.100000e-01 7.00000e-01 1.744000e+01 1.674000e+01  4.15    22.66\nCalories13 4.100000e-01 7.00000e-01 1.668000e+01 1.598000e+01  4.19    22.97\nCalories14 4.100000e-01 0.00000e+00 1.693000e+01 1.693000e+01  4.15    22.62\nCalories15 4.100000e-01 7.00000e-01 1.719000e+01 1.648000e+01  4.17    22.95\nCalories16 4.100000e-01 7.00000e-01 1.719000e+01 1.648000e+01  4.23    23.42\nCalories17 4.100000e-01 7.00000e-01 1.744000e+01 1.674000e+01  4.23    23.70\nCalories18 4.100000e-01 7.00000e-01 1.693000e+01 1.623000e+01  4.19    23.22\nCalories19 4.100000e-01 7.00000e-01 1.668000e+01 1.598000e+01  4.17    23.03\nCalories20 4.100000e-01 7.00000e-01 1.630000e+01 1.560000e+01  4.14    22.41\nCalories21 4.100000e-01 7.00000e-01 1.683000e+01 1.612000e+01  4.21    23.36\nCalories22 4.100000e-01 7.00000e-01 1.778000e+01 1.708000e+01  4.19    23.48\nCalories23 4.100000e-01 7.00000e-01 1.778000e+01 1.708000e+01  4.21    23.64\nCalories24 4.100000e-01 7.00000e-01 1.735000e+01 1.664000e+01  4.19    23.09\nCalories25 4.100000e-01 0.00000e+00 1.709000e+01 1.709000e+01  4.20    23.18\nCalories26 4.100000e-01 7.00000e-01 1.699000e+01 1.628000e+01  4.22    23.58\nCalories27 4.100000e-01 7.00000e-01 1.723000e+01 1.653000e+01  4.25    23.92\nCalories28 4.100000e-01 7.00000e-01 1.683000e+01 1.612000e+01  4.25    23.97\nCalories29 4.100000e-01 7.00000e-01 1.735000e+01 1.664000e+01  4.20    23.15\nCalories30 4.100000e-01 7.00000e-01 1.735000e+01 1.664000e+01  4.13    22.33\nCalories31 4.100000e-01 7.00000e-01 1.761000e+01 1.691000e+01  4.14    22.67\nCalories32 4.100000e-01 7.00000e-01 1.761000e+01 1.691000e+01  4.08    21.92\nCalories33 4.100000e-01 7.00000e-01 1.761000e+01 1.691000e+01  4.07    21.79\nCalories34 4.100000e-01 7.00000e-01 1.787000e+01 1.717000e+01  4.08    22.18\nCalories35 4.100000e-01 7.00000e-01 1.787000e+01 1.717000e+01  4.08    22.23\nCalories36 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.16    23.30\nCalories37 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.22    24.09\nCalories38 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.20    23.85\nCalories39 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.15    23.38\nCalories40 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.19    23.81\nCalories41 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.13    23.20\nCalories42 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.20    23.93\nCalories43 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.20    24.37\nCalories44 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.25    24.84\nCalories45 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.24    24.57\nCalories46 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.21    24.11\nCalories47 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.18    23.76\nCalories48 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.17    23.75\nCalories49 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.13    23.21\nCalories50 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.14    23.39\nCalories51 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.16    23.70\nCalories52 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.18    23.83\nCalories53 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.17    23.87\nCalories54 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.24    24.68\nCalories55 4.100000e-01 7.00000e-01 1.975000e+01 1.905000e+01  4.23    24.79\nCalories56 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.22    24.51\nCalories57 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.11    23.26\nCalories58 4.100000e-01 7.00000e-01 1.973000e+01 1.902000e+01  4.15    23.62\nCalories59 4.100000e-01 0.00000e+00 1.973000e+01 1.973000e+01  4.12    23.54\nDate                 NA         Inf         -Inf         -Inf    NA       NA\nTime                 NA         Inf         -Inf         -Inf    NA       NA\nMonth*     0.000000e+00 1.00000e+00 2.000000e+00 1.000000e+00  0.58    -1.67\nWeekDay*   2.970000e+00 1.00000e+00 7.000000e+00 6.000000e+00 -0.06    -1.26\n                    se\nId         16476672.88\nCalories00        0.01\nCalories01        0.01\nCalories02        0.01\nCalories03        0.01\nCalories04        0.01\nCalories05        0.01\nCalories06        0.01\nCalories07        0.01\nCalories08        0.01\nCalories09        0.01\nCalories10        0.01\nCalories11        0.01\nCalories12        0.01\nCalories13        0.01\nCalories14        0.01\nCalories15        0.01\nCalories16        0.01\nCalories17        0.01\nCalories18        0.01\nCalories19        0.01\nCalories20        0.01\nCalories21        0.01\nCalories22        0.01\nCalories23        0.01\nCalories24        0.01\nCalories25        0.01\nCalories26        0.01\nCalories27        0.01\nCalories28        0.01\nCalories29        0.01\nCalories30        0.01\nCalories31        0.01\nCalories32        0.01\nCalories33        0.01\nCalories34        0.01\nCalories35        0.01\nCalories36        0.01\nCalories37        0.01\nCalories38        0.01\nCalories39        0.01\nCalories40        0.01\nCalories41        0.01\nCalories42        0.01\nCalories43        0.01\nCalories44        0.01\nCalories45        0.01\nCalories46        0.01\nCalories47        0.01\nCalories48        0.01\nCalories49        0.01\nCalories50        0.01\nCalories51        0.01\nCalories52        0.01\nCalories53        0.01\nCalories54        0.01\nCalories55        0.01\nCalories56        0.01\nCalories57        0.01\nCalories58        0.01\nCalories59        0.01\nDate                NA\nTime                NA\nMonth*            0.00\nWeekDay*          0.01\n\n\nCode\ndescribe(minute_steps_wide)\n\n\n             vars     n         mean           sd     median      trimmed\nId              1 21645 4.836965e+09 2.424088e+09 4445114986 4.754963e+09\nSteps00         2 21645 5.300000e+00 1.778000e+01          0 5.700000e-01\nSteps01         3 21645 5.340000e+00 1.768000e+01          0 6.300000e-01\nSteps02         4 21645 5.530000e+00 1.808000e+01          0 6.800000e-01\nSteps03         5 21645 5.470000e+00 1.811000e+01          0 6.300000e-01\nSteps04         6 21645 5.460000e+00 1.829000e+01          0 6.100000e-01\nSteps05         7 21645 5.590000e+00 1.857000e+01          0 6.200000e-01\nSteps06         8 21645 5.560000e+00 1.848000e+01          0 6.500000e-01\nSteps07         9 21645 5.410000e+00 1.834000e+01          0 5.600000e-01\nSteps08        10 21645 5.360000e+00 1.821000e+01          0 5.500000e-01\nSteps09        11 21645 5.360000e+00 1.819000e+01          0 5.400000e-01\nSteps10        12 21645 5.340000e+00 1.834000e+01          0 5.200000e-01\nSteps11        13 21645 5.290000e+00 1.818000e+01          0 5.200000e-01\nSteps12        14 21645 5.300000e+00 1.830000e+01          0 4.800000e-01\nSteps13        15 21645 5.260000e+00 1.835000e+01          0 4.600000e-01\nSteps14        16 21645 5.340000e+00 1.840000e+01          0 5.200000e-01\nSteps15        17 21645 5.280000e+00 1.829000e+01          0 4.800000e-01\nSteps16        18 21645 5.210000e+00 1.815000e+01          0 4.400000e-01\nSteps17        19 21645 5.290000e+00 1.822000e+01          0 4.900000e-01\nSteps18        20 21645 5.350000e+00 1.830000e+01          0 5.300000e-01\nSteps19        21 21645 5.420000e+00 1.849000e+01          0 5.200000e-01\nSteps20        22 21645 5.300000e+00 1.844000e+01          0 4.700000e-01\nSteps21        23 21645 5.290000e+00 1.837000e+01          0 4.900000e-01\nSteps22        24 21645 5.530000e+00 1.871000e+01          0 5.800000e-01\nSteps23        25 21645 5.350000e+00 1.839000e+01          0 5.100000e-01\nSteps24        26 21645 5.310000e+00 1.827000e+01          0 5.000000e-01\nSteps25        27 21645 5.300000e+00 1.830000e+01          0 4.700000e-01\nSteps26        28 21645 5.250000e+00 1.816000e+01          0 4.900000e-01\nSteps27        29 21645 5.310000e+00 1.822000e+01          0 4.900000e-01\nSteps28        30 21645 5.270000e+00 1.802000e+01          0 5.100000e-01\nSteps29        31 21645 5.260000e+00 1.802000e+01          0 5.300000e-01\nSteps30        32 21645 5.400000e+00 1.832000e+01          0 5.500000e-01\nSteps31        33 21645 5.360000e+00 1.812000e+01          0 6.000000e-01\nSteps32        34 21645 5.440000e+00 1.820000e+01          0 6.100000e-01\nSteps33        35 21645 5.500000e+00 1.840000e+01          0 6.000000e-01\nSteps34        36 21645 5.470000e+00 1.832000e+01          0 6.000000e-01\nSteps35        37 21645 5.420000e+00 1.819000e+01          0 6.100000e-01\nSteps36        38 21645 5.580000e+00 1.870000e+01          0 6.000000e-01\nSteps37        39 21645 5.500000e+00 1.850000e+01          0 5.800000e-01\nSteps38        40 21645 5.480000e+00 1.850000e+01          0 5.400000e-01\nSteps39        41 21645 5.340000e+00 1.806000e+01          0 5.500000e-01\nSteps40        42 21645 5.380000e+00 1.803000e+01          0 6.000000e-01\nSteps41        43 21645 5.340000e+00 1.806000e+01          0 5.700000e-01\nSteps42        44 21645 5.260000e+00 1.802000e+01          0 5.100000e-01\nSteps43        45 21645 5.290000e+00 1.784000e+01          0 5.600000e-01\nSteps44        46 21645 5.350000e+00 1.799000e+01          0 5.700000e-01\nSteps45        47 21645 5.240000e+00 1.786000e+01          0 5.300000e-01\nSteps46        48 21645 5.340000e+00 1.809000e+01          0 5.200000e-01\nSteps47        49 21645 5.300000e+00 1.794000e+01          0 5.300000e-01\nSteps48        50 21645 5.320000e+00 1.780000e+01          0 5.500000e-01\nSteps49        51 21645 5.350000e+00 1.795000e+01          0 5.500000e-01\nSteps50        52 21645 5.330000e+00 1.787000e+01          0 5.700000e-01\nSteps51        53 21645 5.190000e+00 1.760000e+01          0 5.100000e-01\nSteps52        54 21645 5.230000e+00 1.762000e+01          0 5.300000e-01\nSteps53        55 21645 5.150000e+00 1.757000e+01          0 5.200000e-01\nSteps54        56 21645 5.220000e+00 1.768000e+01          0 5.400000e-01\nSteps55        57 21645 5.280000e+00 1.783000e+01          0 5.600000e-01\nSteps56        58 21645 5.180000e+00 1.757000e+01          0 5.300000e-01\nSteps57        59 21645 5.250000e+00 1.769000e+01          0 5.500000e-01\nSteps58        60 21645 5.140000e+00 1.743000e+01          0 5.400000e-01\nSteps59        61 21645 5.290000e+00 1.772000e+01          0 5.700000e-01\nDate           62 21645          NaN           NA         NA          NaN\nTime           63 21645          NaN           NA         NA          NaN\nMonth*         64 21645 1.360000e+00 4.800000e-01          1 1.330000e+00\nWeekDay*       65 21645 4.090000e+00 2.030000e+00          4 4.110000e+00\nTime_of_day*   66 21645 2.360000e+00 1.110000e+00          2 2.330000e+00\n                      mad        min        max      range  skew kurtosis\nId           3.586058e+09 1503960366 8877689391 7373729025  0.19    -1.27\nSteps00      0.000000e+00          0        186        186  4.66    25.39\nSteps01      0.000000e+00          0        180        180  4.62    24.85\nSteps02      0.000000e+00          0        182        182  4.48    23.21\nSteps03      0.000000e+00          0        182        182  4.57    24.24\nSteps04      0.000000e+00          0        181        181  4.63    24.73\nSteps05      0.000000e+00          0        180        180  4.54    23.80\nSteps06      0.000000e+00          0        181        181  4.60    24.44\nSteps07      0.000000e+00          0        183        183  4.69    25.48\nSteps08      0.000000e+00          0        180        180  4.71    25.68\nSteps09      0.000000e+00          0        183        183  4.64    24.58\nSteps10      0.000000e+00          0        180        180  4.73    25.64\nSteps11      0.000000e+00          0        181        181  4.75    25.77\nSteps12      0.000000e+00          0        181        181  4.72    25.41\nSteps13      0.000000e+00          0        180        180  4.78    26.05\nSteps14      0.000000e+00          0        182        182  4.75    25.87\nSteps15      0.000000e+00          0        179        179  4.74    25.74\nSteps16      0.000000e+00          0        180        180  4.78    26.14\nSteps17      0.000000e+00          0        183        183  4.73    25.64\nSteps18      0.000000e+00          0        180        180  4.73    25.63\nSteps19      0.000000e+00          0        182        182  4.68    25.12\nSteps20      0.000000e+00          0        179        179  4.76    25.69\nSteps21      0.000000e+00          0        185        185  4.79    26.26\nSteps22      0.000000e+00          0        182        182  4.63    24.49\nSteps23      0.000000e+00          0        187        187  4.74    25.83\nSteps24      0.000000e+00          0        180        180  4.74    25.81\nSteps25      0.000000e+00          0        181        181  4.75    25.93\nSteps26      0.000000e+00          0        186        186  4.77    26.22\nSteps27      0.000000e+00          0        180        180  4.70    25.37\nSteps28      0.000000e+00          0        181        181  4.72    25.69\nSteps29      0.000000e+00          0        183        183  4.75    26.01\nSteps30      0.000000e+00          0        181        181  4.67    24.93\nSteps31      0.000000e+00          0        181        181  4.71    25.64\nSteps32      0.000000e+00          0        181        181  4.62    24.64\nSteps33      0.000000e+00          0        182        182  4.59    24.18\nSteps34      0.000000e+00          0        180        180  4.62    24.60\nSteps35      0.000000e+00          0        187        187  4.66    25.19\nSteps36      0.000000e+00          0        183        183  4.58    24.08\nSteps37      0.000000e+00          0        181        181  4.63    24.67\nSteps38      0.000000e+00          0        185        185  4.58    23.93\nSteps39      0.000000e+00          0        184        184  4.66    25.13\nSteps40      0.000000e+00          0        184        184  4.66    25.17\nSteps41      0.000000e+00          0        184        184  4.68    25.28\nSteps42      0.000000e+00          0        180        180  4.72    25.77\nSteps43      0.000000e+00          0        188        188  4.66    25.19\nSteps44      0.000000e+00          0        220        220  4.64    25.00\nSteps45      0.000000e+00          0        184        184  4.68    25.22\nSteps46      0.000000e+00          0        207        207  4.64    24.87\nSteps47      0.000000e+00          0        190        190  4.61    24.42\nSteps48      0.000000e+00          0        182        182  4.58    24.30\nSteps49      0.000000e+00          0        182        182  4.59    24.42\nSteps50      0.000000e+00          0        182        182  4.59    24.33\nSteps51      0.000000e+00          0        181        181  4.67    25.40\nSteps52      0.000000e+00          0        181        181  4.66    25.40\nSteps53      0.000000e+00          0        181        181  4.79    26.97\nSteps54      0.000000e+00          0        184        184  4.70    25.85\nSteps55      0.000000e+00          0        181        181  4.69    25.57\nSteps56      0.000000e+00          0        182        182  4.73    26.41\nSteps57      0.000000e+00          0        182        182  4.67    25.50\nSteps58      0.000000e+00          0        180        180  4.77    26.86\nSteps59      0.000000e+00          0        189        189  4.66    25.51\nDate                   NA        Inf       -Inf       -Inf    NA       NA\nTime                   NA        Inf       -Inf       -Inf    NA       NA\nMonth*       0.000000e+00          1          2          1  0.58    -1.67\nWeekDay*     2.970000e+00          1          7          6 -0.06    -1.26\nTime_of_day* 1.480000e+00          1          4          3  0.15    -1.33\n                      se\nId           16476672.88\nSteps00             0.12\nSteps01             0.12\nSteps02             0.12\nSteps03             0.12\nSteps04             0.12\nSteps05             0.13\nSteps06             0.13\nSteps07             0.12\nSteps08             0.12\nSteps09             0.12\nSteps10             0.12\nSteps11             0.12\nSteps12             0.12\nSteps13             0.12\nSteps14             0.13\nSteps15             0.12\nSteps16             0.12\nSteps17             0.12\nSteps18             0.12\nSteps19             0.13\nSteps20             0.13\nSteps21             0.12\nSteps22             0.13\nSteps23             0.12\nSteps24             0.12\nSteps25             0.12\nSteps26             0.12\nSteps27             0.12\nSteps28             0.12\nSteps29             0.12\nSteps30             0.12\nSteps31             0.12\nSteps32             0.12\nSteps33             0.13\nSteps34             0.12\nSteps35             0.12\nSteps36             0.13\nSteps37             0.13\nSteps38             0.13\nSteps39             0.12\nSteps40             0.12\nSteps41             0.12\nSteps42             0.12\nSteps43             0.12\nSteps44             0.12\nSteps45             0.12\nSteps46             0.12\nSteps47             0.12\nSteps48             0.12\nSteps49             0.12\nSteps50             0.12\nSteps51             0.12\nSteps52             0.12\nSteps53             0.12\nSteps54             0.12\nSteps55             0.12\nSteps56             0.12\nSteps57             0.12\nSteps58             0.12\nSteps59             0.12\nDate                  NA\nTime                  NA\nMonth*              0.00\nWeekDay*            0.01\nTime_of_day*        0.01\n\n\n\nUsing a table() function displaying a count of each user’s ID occurrence for every single entry recorded in day wise data.\n\n\n\nCode\ntable(daily_activity$Id)\n\n\n\n1503960366 1624580081 1644430081 1844505072 1927972279 2022484408 2026352035 \n        31         31         30         31         31         31         31 \n2320127002 2347167796 2873212765 3372868164 3977333714 4020332650 4057192912 \n        31         18         31         20         30         31          4 \n4319703577 4388161847 4445114986 4558609924 4702921684 5553957443 5577150313 \n        31         31         31         31         31         31         30 \n6117666160 6290855005 6775888955 6962181067 7007744171 7086361926 8053475328 \n        28         29         26         31         26         31         31 \n8253242879 8378563200 8583815059 8792009665 8877689391 \n        19         31         31         29         31 \n\n\n\nUsing a table() function displaying a count of each user’s ID occurrence for every single entry recorded in hourly wise data.\n\n\n\nCode\ntable(hourly_calories$Id)\n\n\n\n1503960366 1624580081 1644430081 1844505072 1927972279 2022484408 2026352035 \n       717        736        708        731        736        736        736 \n2320127002 2347167796 2873212765 3372868164 3977333714 4020332650 4057192912 \n       735        414        736        472        696        732         88 \n4319703577 4388161847 4445114986 4558609924 4702921684 5553957443 5577150313 \n       724        735        735        736        731        730        708 \n6117666160 6290855005 6775888955 6962181067 7007744171 7086361926 8053475328 \n       660        665        610        732        601        733        735 \n8253242879 8378563200 8583815059 8792009665 8877689391 \n       431        735        718        672        735 \n\n\n\nUsing a table() function displaying a count of each user’s ID occurrence for every single entry recorded in minute wise data.\n\n\n\nCode\ntable(minute_calories_wide$Id)\n\n\n\n1503960366 1624580081 1644430081 1844505072 1927972279 2022484408 2026352035 \n       719        729        684        724        729        729        729 \n2320127002 2347167796 2873212765 3372868164 3977333714 4020332650 4057192912 \n       729        390        725        448        725        726         64 \n4319703577 4388161847 4445114986 4558609924 4702921684 5553957443 5577150313 \n       700        715        727        717        726        706        684 \n6117666160 6290855005 6775888955 6962181067 7007744171 7086361926 8053475328 \n       636        641        586        728        577        720        728 \n8253242879 8378563200 8583815059 8792009665 8877689391 \n       407        727        694        648        728 \n\n\n\nTaking a glance at average of Fairly active and very active minutes using head().\n\n\n\nCode\nhead(mean(daily_activity$FairlyActiveMinutes))\n\n\n[1] 13.56489\n\n\nCode\nhead(mean(daily_activity$VeryActiveMinutes))\n\n\n[1] 21.16489\n\n\n\nExtracting Id’s which are greater or equal to a given threshold and also keeping a count.\n\n\n\nCode\nactivity_users_minutes <- daily_activity %>% \n  filter(FairlyActiveMinutes>=13.56 | VeryActiveMinutes>=21.16) %>% \n  group_by(Id) %>% \n  count(Id)\n\n\n\nTaking a total sum of all different attributes combined to get the exact total amount of time users were active.\n\n\n\nCode\ntotal_minutes <- sum(daily_activity$VeryActiveMinutes,daily_activity$FairlyActiveMinutes,\n                     daily_activity$LightlyActiveMinutes,daily_activity$SedentaryMinutes)\n\n\n\nCalculating the percentage by adding each attribute using a sum() and then by dividing it to obtain final quotient.\n\n\n\nCode\nsedentary_percentage <- sum(daily_activity$SedentaryMinutes)/total_minutes*100\nlightly_percentage <- sum(daily_activity$LightlyActiveMinutes)/total_minutes*100\nfairly_percentage <- sum(daily_activity$FairlyActiveMinutes)/total_minutes*100\nactive_percentage <- sum(daily_activity$VeryActiveMinutes)/total_minutes*100\n\n\n\nFinal results are compiled into a data frame for further visualization.\n\n\n\nCode\npercentage_minutes_compile <- data.frame(\n  label=c(\"Sedentary\", \"Lightly\", \"Fairly\", \"Very Active\"),\n  minutes=c(sedentary_percentage,lightly_percentage,fairly_percentage,active_percentage)\n)\n\n\n\nTaking a glance at average of moderate and very active minutes using head()\n\n\n\nCode\nhead(mean(daily_activity$ModeratelyActiveDistance))\n\n\n[1] 0.5675426\n\n\nCode\nhead(mean(daily_activity$VeryActiveDistance))\n\n\n[1] 1.502681\n\n\n\nExtracting Id’s which are greater or equal to the given threshold and also keeping a count on the other hand.\n\n\n\nCode\nactivity_user_distance <- daily_activity %>% \n  filter(ModeratelyActiveDistance>=0.56 | VeryActiveDistance >= 1.50 ) %>% \n  group_by(Id) %>% \n  count(Id)\n\n\n\nTaking a total sum of all different attributes combined to get the exact total amount of distance covered by users.\n\n\n\nCode\ntotal_distance <- sum(daily_activity$VeryActiveDistance, daily_activity$ModeratelyActiveDistance, \n                      daily_activity$LightActiveDistance, \n                       daily_activity$SedentaryActiveDistance)\n\n\n\nCalculating the percentage by adding each attribute using a sum() and then by dividing it to obtain the final quotient.\n\n\n\nCode\nveryActive_percentage <- sum(daily_activity$VeryActiveDistance)/total_distance *100\nModerateActive_percentage <- sum(daily_activity$ModeratelyActiveDistance)/total_distance *100\nLightActive_percentage <- sum(daily_activity$LightActiveDistance)/total_distance *100\nsedentaryDistance_percentage <- sum(daily_activity$SedentaryActiveDistance)/total_distance *100\n\n\n\nFinal results are compiled into a data frame for further visualization.\n\n\n\nCode\npercentage_distance_compile <- data.frame(\n  label = c(\"Very Active\",\"Moderate\",\"Lightly Active\",\"Sedentary\"),\n  distance = c(veryActive_percentage,ModerateActive_percentage,LightActive_percentage,\n               sedentaryDistance_percentage)\n)\n\n\n\nPreviewing Calories burned from morning time to evening time for every weekday in a month.\n\n\n\nCode\nCalories <- minute_calories_narrow %>% \n  filter(Calories >= 1) %>% \n  filter(hms::as_hms(Time) >= hms::as_hms(\"04:00:00\") & hms::as_hms(Time) <= hms::as_hms(\"21:00:00\")) %>% \n  group_by(Time, Month, WeekDay) %>% \n  summarize(total_calories = sum(Calories))"
  },
  {
    "objectID": "Bellabeat.html#share-phase",
    "href": "Bellabeat.html#share-phase",
    "title": "Case Study on Bellabeat",
    "section": "8 SHARE PHASE:",
    "text": "8 SHARE PHASE:\n\nIn this phase, potential insights will be shared through the use of appropriate visualizations created with tools such as R and Tableau. These visualizations will depict actionable steps that stakeholders can initiate to address the relevant concern.\n\n\n8.1 Key Task\n\n\nSelecting the most adequate tools such as R and tableau to illustrate the visualization in a more effective manner.\nChoosing the appropriate graph type to conclude findings along with legends, labels and heading to improve readability and interpretation.\nProvide detailed explanations for all aspects of the analysis, including minor details by making the visualization interactive.\nEnsuring work is easily accessible.\n\n\n\n\n8.2 Deliverables\n\n\nPresentation of findings accompanied with illustration of graphs along with explanations.\nPut a short brief for each visualization included in this phase to aid effective understanding.\nAll of the visualizations were made interactive in order to provide a wider outlook.\n\n\n\n\n8.3 Visualization\n\nComparing Total time Slept Vs Total time in Bed using various geom() functions such as geom_point(), geom_smooth() and geom_jitter().\n\n\n\nCode\nggplotly(ggplot(data = sleep_day) + aes(x = as_hms(TotalTimeInBed), y = as_hms(TotalMinutesAsleep)) + geom_point() + \n           geom_smooth() + geom_jitter() + labs(title = paste0(\"<b>\", \"Total time Asleep Vs Total Time In Bed\" ,\"</b>\"), \n                                                x = \"Total Time in Bed\" , y = \"Total Minutes as Asleep\") \n  + theme_minimal())\n\n\n\n\n\n\n\nHere, comparing the split of distance covered for every weekday of a month using geom_bar() function.\n\n\n\nCode\nggplotly(ggplot(data = daily_activity) + aes(x = Month, y = TotalDistance, fill = WeekDay) + geom_bar(stat = 'identity',position = 'dodge', width = 1) + \n        scale_fill_manual(values =  c(\"blue\",\"orange\",\"brown\",\"yellow\",\"black\",\"red\",\"darkgoldenrod\")) + \n          labs(title = paste0(\"<b>\", \"Comparing Distance for every Weekdays in a month\",\"</b>\"), \n        x = \"Month\", Y = \"Total Distance\" , fill = \"Weekdays\" ) + \n          theme(axis.text.x = element_text(vjust = 0.5, hjust=1),plot.background = element_rect(fill = \"lightblue\")))\n\n\n\n\n\n\n\nVisualized the difference in total steps taken for each weekday of a month using the geom_col() function.\n\n\n\nCode\nggplotly(ggplot(data = daily_activity) + aes(x = Month, y = TotalSteps, fill = WeekDay) + geom_col(position = 'dodge',width = 1 )\n         + scale_fill_manual(values = c(\"brown\",\"darkgreen\",\"orange\",\"darkgoldenrod\",\"black\",\"blue\",\"darkorchid\")) + \n           labs(title = paste0(\"<b>\",\"Comparing Total Steps for every Weekdays in a month\",\"</b>\"), x = \"Month\", \n                y =\"Total Steps\", fill = \"Weekdays\") + \n           theme(axis.title.x = element_text(vjust = 0.5, hjust = 1), plot.background = element_rect(fill = \"skyblue\")))\n\n\n\n\n\n\n\nTrying to get the co-relation of total distance covered vs total steps taken every weekday of a month using geom_line(),geom_point() and facet_wrap functions.\n\n\n\nCode\nggplotly(ggplot(data = daily_activity) + aes(x = TotalDistance, y = TotalSteps, fill = Month) + geom_line(linewidth = 1.5)+ \n           geom_point(size = 2) + facet_wrap(~WeekDay) + scale_fill_manual(values = c(\"lightblue\",\"orange\") ) + \n           theme(panel.grid.major = element_line(color = \"gray\", linetype = \"dotted\")) + \n           labs(title = \"Total Distance Vs Total Steps Taken\") + xlab(\"Total Distance\") + ylab(\"Total Steps\"))\n\n\n\n\n\n\n\nVisualized daily calories burned for every weekday in a month using type as bar plot.\n\n\n\nCode\nplot_ly(data = daily_calories, x = ~WeekDay, y = ~Calories, type = \"bar\", color = ~Month, \n        colors = c(\"black\", \"darkorchid\")) %>% \n  layout(title = \"Daily Calories by Weekday and Month\", \n         xaxis = list(title = \"Weekday\"), yaxis = list(title = \"Calories\"),\n         legend = list(title = list(text = \"Month\")),\n         hovermode = \"closest\") %>% \n  layout(xaxis = list(tickangle = 60, tickfont = list(size = 10)))\n\n\n\n\n\n\n\nVisualizing hourly calories burned by each user Id for a weekday in a month using type as geom_line().\n\n\nCreate ggplot object.\n\n\n\nCode\nggploty_obj <- ggplot(data = hourly_calories, aes(x = as_hms(Time), \n                                                  y = Calories, color = Month)) +\n  geom_line(linewidth = 1.5, alpha = 0.8) + facet_wrap(~WeekDay) +\n  scale_color_brewer(palette = \"Set1\") + \n  labs(x = \"Time of Day\", y = \"Calories Burned\", \n       title = \"Hourly Calories burned each weekday of an month\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\nConvert ggplot object to plotly object.\n\n\n\nCode\nplot_obj <- ggplotly(ggploty_obj)\n\n\n\nShow plotly object.\n\n\n\nCode\nplot_obj\n\n\n\n\n\n\n\nVisualized each minute of calories burned for a month on weekday basis using geom_line() and facet_wrap() function.\n\n\nCreate ggplot object.\n\n\n\nCode\nggplot_obj <- ggplot(data = Calories, aes(x = as_hms(Time), y = total_calories, color = Month)) +\n  geom_line(linewidth = 1.5, alpha = 0.8) + facet_wrap(~WeekDay) +\n  scale_color_brewer(palette = \"Dark2\") + \n  labs(x = \"Time of Day\", y = \"Calories Burned\", \n       title = \"Each minute of calories burned on a weekday of a month\") +\n  theme(axis.text.x = element_text(angle = 90, hjust = 1))\n\n\n\nConvert ggplot object to plotly object.\n\n\n\nCode\nplotly_obj <- ggplotly(ggplot_obj)\n\n\n\nDisplay plotly object.\n\n\n\nCode\nplotly_obj\n\n\n\n\n\n\n\nComparing randomness and correlation for Total_Minute_As_sleep, Total_Time_In_Bed and Sedentary_Minutes using correlogram.\n\n\n\nCode\nchange_palette_single <- function(data, mapping, method = \"lm\", ...) {\n    correlogram <- ggplot(data = data, mapping = mapping) +\n      geom_point(colour = \"darkgreen\") +\n      geom_smooth(method = method, color = \"darkred\", ...)\n    return(correlogram)\n  }\n\n\n\nSelecting the specific columns.\n\n\n\nCode\ncorrelogram <- dailyActivity_sleep %>%\n  select(TotalMinutesAsleep, TotalTimeInBed, SedentaryMinutes) %>%\n  ggpairs(lower = list(continuous = wrap(change_palette_single, method = \"lm\",\n                                         data = dailyActivity_sleep)),\n          diag = list(continuous = wrap(\"barDiag\", colour = \"Darkgreen\")),\n          upper = list(continuous = wrap(\"cor\", size = 4))) +\n  theme(panel.grid.major = element_blank()) +\n  labs(title = \"Correlogram Of Sedentary Minutes vs Sleep\")\n\n\n\nConvert to interactive plot with ggplotly.\n\n\n\nCode\np <- ggplotly(correlogram)\n\n\n\nAdjust margin of title.\n\n\n\nCode\np <- layout(p, title = list(text = \"Correlogram Of Sedentary Minutes vs Sleep\",\n                            font = list(size = 16),\n                            margin = list(b = 40)))\n\n\n\nDisplay interactive plot.\n\n\n\nCode\np\n\n\n\n\n\n\n\nComparing randomness and correlation for weight, BMI and Sedentary minutes using correlogram.\n\n\n\nCode\nchange_palette_single1 <- function(data, mapping, method = \"lm\", ...) {\n  correlogram <- ggplot(data = data, mapping = mapping) +\n    geom_point(colour = \"darkblue\") +\n    geom_smooth(method = method, color = \"darkgoldenrod\", ...)\n  return(correlogram)\n}\n\n\n\nSelecting the specific columns.\n\n\n\nCode\ncorrelogram1 <- dailyIntensities_weight %>%\n  select(WeightPounds, BMI, SedentaryMinutes) %>%\n  ggpairs(lower = list(continuous = wrap(change_palette_single1, \n                  method = \"lm\", data = dailyIntensities_weight)),\n          diag = list(continuous = wrap(\"barDiag\", colour = \"Darkblue\")),\n          upper = list(continuous = wrap(\"cor\", size = 4))) +\n  theme(panel.grid.major = element_blank()) +\n  labs(title = \"Correlogram Of Weight vs Sedentary Minutes\")\n\n\n\nConvert to interactive plot with ggplotly.\n\n\n\nCode\np1 <- ggplotly(correlogram1)\n\n\n\nAdjust margin of title\n\n\n\nCode\np1 <- layout(p1, title = list(text = \"Correlogram Of Weight vs Sedentary Minutes\",\n                            font = list(size = 16),\n                            margin = list(b = 40)))\n\n\n\nDisplay interactive plot.\n\n\n\nCode\np1\n\n\n\n\n\n\n\nHere, looking through Total steps Vs Calories followed by sedentary minutes using bubble chart.\n\n\n\nCode\nggplotly(ggplot(data = daily_activity) + aes(x = TotalSteps, y = Calories, \n  color = SedentaryMinutes , size = SedentaryMinutes) +\n  geom_point(alpha = 0.6) + scale_size(range = c(1.4,10)) + \n    labs(title = \"Total Steps Vs Calories\" ,x = \"Total Steps\",\n         y = \"Calories\", color = \"Sedentary Minutes\") + \n    scale_color_viridis(discrete = FALSE, guide = FALSE)+ theme_ipsum() + \n    guides(color = guide_colorbar(title = \"Sedentary Minutes\")))\n\n\n\n\n\n\n\nHere, created pie chart to know the exact split of various active minutes spent by users in percentage.\n\n\n\nCode\nplot_ly(percentage_minutes_compile, labels = ~label, values = ~minutes, \n        type = 'pie',textposition = 'outside',textinfo = 'label+percent') %>%\n  layout(title = 'Activity Level Minutes',\n         xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))\n\n\n\n\n\n\n\nHere, created pie chart to know the exact split of various active distance covered by users in percentage.\n\n\n\nCode\nplot_ly(percentage_distance_compile, labels = ~label, values = ~distance, \n        type = 'pie',textposition = 'outside',textinfo = 'label+percent') %>%\n  layout(title = 'Activity Distance',\n         xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),\n         yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))"
  },
  {
    "objectID": "Bellabeat.html#tableau-dashboard",
    "href": "Bellabeat.html#tableau-dashboard",
    "title": "Case Study on Bellabeat",
    "section": "9 TABLEAU DASHBOARD",
    "text": "9 TABLEAU DASHBOARD\n\n\nCode\nhtmltools::HTML(\"\n<div class='tableauPlaceholder' id='viz1679140790858' style='position: relative'>\n  <noscript>\n    <a href='#'>\n      <img alt='BELLABEAT DATA ANALYSIS DASHBOARD ' src='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellaBeatCaseStudy_16779607987320&#47;BellaBeatDashBoard&#47;1_rss.png' style='border: none' />\n    </a>\n  </noscript>\n  <object class='tableauViz'  style='display:none;'>\n    <param name='host_url' value='https%3A%2F%2Fpublic.tableau.com%2F' />\n    <param name='embed_code_version' value='3' />\n    <param name='site_root' value='' />\n    <param name='name' value='BellaBeatCaseStudy_16779607987320&#47;BellaBeatDashBoard' />\n    <param name='tabs' value='no' />\n    <param name='toolbar' value='yes' />\n    <param name='static_image' value='https:&#47;&#47;public.tableau.com&#47;static&#47;images&#47;Be&#47;BellaBeatCaseStudy_16779607987320&#47;BellaBeatDashBoard&#47;1.png' />\n    <param name='animate_transition' value='yes' />\n    <param name='display_static_image' value='yes' />\n    <param name='display_spinner' value='yes' />\n    <param name='display_overlay' value='yes' />\n    <param name='display_count' value='yes' />\n    <param name='language' value='en-US' />\n  </object>\n</div>\n<script type='text/javascript'>\n  var divElement = document.getElementById('viz1679140790858');\n  var vizElement = divElement.getElementsByTagName('object')[0];\n  if ( divElement.offsetWidth > 800 ) {\n    vizElement.style.width='100%';\n    vizElement.style.height=(divElement.offsetWidth*0.75)+'px';\n  } else if ( divElement.offsetWidth > 500 ) {\n    vizElement.style.width='2000px';\n    vizElement.style.height='1327px';\n  } else {\n    vizElement.style.width='100%';\n    vizElement.style.height='2427px';\n  }\n  var scriptElement = document.createElement('script');\n  scriptElement.src = 'https://public.tableau.com/javascripts/api/viz_v1.js';\n  vizElement.parentNode.insertBefore(scriptElement, vizElement);\n</script>\")"
  },
  {
    "objectID": "Bellabeat.html#act-phase",
    "href": "Bellabeat.html#act-phase",
    "title": "Case Study on Bellabeat",
    "section": "10 ACT PHASE:",
    "text": "10 ACT PHASE:\n\nThis extensively crucial phase of strategizing the new marketing campaign will be carried out by Urška Sršen(Bellabeat’s cofounder and Chief Creative Officer),Sando Mur(Mathematician and Bellabeat’s cofounder; key member of the Bellabeat executive team) and Bellabeat marketing team based on the conclusion of the above analysis made."
  },
  {
    "objectID": "Bellabeat.html#conclusion",
    "href": "Bellabeat.html#conclusion",
    "title": "Case Study on Bellabeat",
    "section": "11 CONCLUSION:",
    "text": "11 CONCLUSION:\n\n\nThe relationship between total time asleep and total time in bed appears to be quite linear. Nevertheless, some users sleep for more than 10 hours and spend over 12 hours in bed, which results in an unhealthy sleep cycle.\nThe distance covered by each female user appears to be more active during weekends, particularly on Saturdays and Sundays, compared to other weekdays. Additionally, it varies from month to month. Out of the two months’ data available, Thursday and Tuesday recorded the lowest distance covered by female users for the month of May.\nThe co-relation of total steps walked every weekday in a month appear to be similar with the distance covered by each user. This suggests that most calories are burned through walking, irrespective of any other exercises.\nBased on two-month data, one interesting insight is that the maximum amount of calories on a daily basis were burned by women users during the month of April, whereas the lowest sum of calories was burned during the month of May.\nThe data shows that active weekdays for calories burned on a minute-by-minute and hourly basis almost follows a linear pattern, with Friday, Saturday, Thursday, and Tuesday being the peak weekdays compared to the rest of the week.\nThe correlogram of total time asleep, and total time in bed clearly indicates a positive relationship between them.However, sedentary minutes have a negative relationship with both total time asleep and time in bed. Additionally, the distribution of sedentary minutes is bimodal.These findings suggest that increasing time spent asleep and in bed may be beneficial for overall health, while reducing sedentary behavior could also have a positive impact on day to day life.\nThe correlogram of weight in pounds and BMI reveals a clear positive relationship between these variables, while sedentary minutes exhibit a negative relationship with both weight and BMI. These findings suggest that reducing sedentary behavior could help maintain a balanced weight and BMI.\nThe pie chart clearly shows that sedentary minutes percentage are comparatively much higher than the rest of the segments, such as very active minutes, fairly active minutes and lightly active minutes, which shows that users were very minimally active.\nThe second pie chart reveals that lightly active distance contribute almost 50% of total segments followed by very active and moderate distance.However, sedentary distance is almost negligible as compared to all three segments.\nAmong the three categories of distance covered by each female user, the average distance for very active distance is 1.39km, the moderate distance is 0.73km, while in comparison with the light active distance, which is much higher at 3.53km. These findings suggest that female users engaged in a variety of physical activity levels, with light activity being the most common and highest in distance."
  },
  {
    "objectID": "Bellabeat.html#deliverable",
    "href": "Bellabeat.html#deliverable",
    "title": "Case Study on Bellabeat",
    "section": "12 DELIVERABLE:",
    "text": "12 DELIVERABLE:\n\n\nAllocate data engineers to focus on collecting a diverse range of health data while maintaining data integrity and by enabling integration of data science into bellabeat resulting in personalized push notifications based on individual health parameters.\nIntegrating data science can help curate a comprehensive understanding of their health and wellness that in turn can guide them towards more informed decisions about their lifestyle choices and improve their overall well-being.Thus making the app a more effective tool for achieving health and wellness goals.\nAn effective way to get weight info is to first partner with any weight scale manufacturer to develop a smart weight scale digital solution to get the precise weight readings.It is one of the crucial parameters which will help nutritionists or algorithms to provide personalized and accurate guidance. Also, by leveraging this data, the overall experience for achieving health and wellness goals can be enhanced more effectively.\nTo create a more engaging experience for our users, we could develop a community feature that allows them to connect with friends from their contacts, social media accounts, or directly within the app. By leveraging social connections, we can boost user engagement and increase screen time on the app.\nBellabeat app can be an essential part of our users’ daily routine by integrating additional features that help them plan their day. Along with that, it could include an alarm option that alerts them to attend scheduled tasks throughout the day. Additionally, we could host weekly and monthly challenges that are open to users from any location, and offer rewards such as discount coupons or free product or service subscriptions for those who complete the challenges. These features will not only enhance the user experience, but also encourage them to use the app regularly and make healthier choices as part of their daily lifestyle.\nTo help users improve their sleep cycle, we can add extensions to the app that provide default notifications for getting into bed and waking up on time. This can be achieved by incorporating heart rate sensors that detect the user’s sleep time and provide alerts accordingly. These features will not only promote better sleep habits, but also enhance the user experience by providing personalized notifications based on their individual sleep patterns.\nTo reduce sedentary minutes, it is essential to add an extra feature that enables users to drink water after every half an hour to stay hydrated. Additionally,if a user has been sedentary for two or three hours, remind the user to take a short walk in order to make them more active and productive throughout the day.By incorporating these features, users can stay motivated to stay active and healthy, leading to a more balanced lifestyle.\nTo reduce total time in bed, bellabeat can add an additional feature to the sleep cycle feature that prompts users with a notification to fall asleep if they are awake in bed for an extended period of time. Additionally, Bellabeat can partner with a software company that produces meditation and sleep time stories and integrate subscription packages within its annual or monthly packages. This can help users to get a complete bundle of health and calmness along with a push to fall asleep early, thus reducing total time in bed.\nExpand your user base by enabling referral benefits such as giving both users the benefit of a 50% - 50% discount on annual subscriptions, or else providing any subscription to any product.Other than that, another extra feature can be added by creating a bellabeat, secure wallet service where users can earn coins on referrals plus gets rewarded for every challenge they participate and then can spent it on any bellabeat products or services purchases made in any near future."
  },
  {
    "objectID": "Bellabeat.html#resources",
    "href": "Bellabeat.html#resources",
    "title": "Case Study on Bellabeat",
    "section": "13 RESOURCES:",
    "text": "13 RESOURCES:\n\n\nStack overflow [Link].\nRStudio Community[Link].\nRPubs[Link].\nKaggle [Link].\nNational Library Of Medicine [Link]."
  }
]